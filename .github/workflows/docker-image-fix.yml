name: Docker Image CI - Fix Branch

on:
  push:
    branches: [fix/**]

jobs:
  build-octopus-telemetry-x86-64:
    name: Build Octopus Telemetry x86/64
    runs-on: ubuntu-latest
    env:
      ARCH: x86
      TARGET_VERSION: fix
      GITHUB_REMOTE_URL: ghcr.io/${{ github.repository }}
      IMAGE_NAME: octopus-ui
    steps:
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build the docker image
        run: |
          docker build . --tag build-${TARGET_VERSION}-${GITHUB_REF##*/}-${GITHUB_RUN_NUMBER} --build-arg BUILD_DATE=$(date '  +%Y-%m-%d_%H:%M:%S')
      
      - name: Create Docker Image Tag
        run: |
          docker tag build-${TARGET_VERSION}-${GITHUB_REF##*/}-${GITHUB_RUN_NUMBER} ${GITHUB_REMOTE_URL}/${IMAGE_NAME}:${TARGET_VERSION}

      - name: Push Image to Github Packages Registry
        run: |
          docker push --all-tags ${GITHUB_REMOTE_URL}/${IMAGE_NAME}:${ARCH}-${TARGET_VERSION}

  octopus-telemetry-64:
    name: Build Octopus-Telemetry AMR64
    runs-on: ubuntu-latest
    env:
      ARCH: arm64
      TARGET_VERSION: fix
      GITHUB_REMOTE_URL: ghcr.io/${{ github.repository }}
      IMAGE_NAME: octopus-ui
    steps:
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Enable Docker Daemon Experimental Features
        run: |
          sudo rm /etc/docker/daemon.json
          echo '{"experimental": true , "cgroup-parent": "/actions_job" }' | sudo tee -a /etc/docker/daemon.json
          sudo service docker restart
          docker version
      - name: Install QEMU to be able to compile on X86 into ARM64
        run: |
          sudo apt-get update
          sudo apt-get install qemu binfmt-support qemu-user-static
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Build the docker image
        run: |
          docker build . --tag build-${TARGET_VERSION}-${GITHUB_REF##*/}-${GITHUB_RUN_NUMBER} --build-arg BUILD_DATE=$(date '  +%Y-%m-%d_%H:%M:%S')
      
      - name: Create Docker Image Tag
        run: |
          docker tag build-${TARGET_VERSION}-${GITHUB_REF##*/}-${GITHUB_RUN_NUMBER} ${GITHUB_REMOTE_URL}/${IMAGE_NAME}:${TARGET_VERSION}

      - name: Push Image to Github Packages Registry
        run: |
          docker push --all-tags ${GITHUB_REMOTE_URL}/${IMAGE_NAME}:${ARCH}-${TARGET_VERSION}


#        uses: docker/login-action@v1
#        with:
#          registry: ghcr.io
#          username: ${{ github.repository_owner }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Build and Push Octopus-Telemetry
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          push: true
#          cache-from: type=registry,ref=ghcr.io/sonia-auv/octopus-telemetry:fix
#          cache-to: type=inline
#          tags: |
#            ghcr.io/sonia-auv/octopus-telemetry:fix