{"ast":null,"code":"var _jsxFileName = \"/home/alexemdesgagne/octopus-telemetry/src/src/components/VisionUiFilterChain.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport TextField from './common/textfield/Textfield';\nimport Button from './common/button/Button';\nimport ListItemText from './common/List/ListItemText';\nimport ListItem from './common/List/ListItem';\nimport List from './common/List/List';\nimport { MCachedIcon as CachedIcon } from './common/Icons/Icon';\nimport { useROSService, ServiceRequestFactory } from '../hooks/useROSService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VisionUIExecutionModule = () => {\n  _s();\n\n  ////////////////////////////////\n  // FILTER CHAIN TAB\n  ////////////////////////////////\n  const [filterChainList, setfilterChainList] = useState([]);\n  const [filterChainName, setFilterChainName] = useState('');\n  const [filterChainSelectedTab, setFilterChainSelectedTab] = React.useState('');\n  const addFilterChainServiceCallback = useCallback(x => {}, []);\n\n  const handleRefreshFilterChainList = () => {\n    var request = ServiceRequestFactory({\n      cmd: 3\n    });\n    getFilterChainlistServiceCall(request);\n  };\n\n  const getFilterChainlistServiceCallback = useCallback(x => {\n    var receivedList = x.list;\n    var tab = [];\n    receivedList.split(';').forEach((v, index) => {\n      tab.push({\n        value: v\n      });\n    }); // Sort values\n\n    tab.sort((a, b) => a.value !== b.value ? a.value < b.value ? -1 : 1 : 0);\n    setfilterChainList(tab);\n  }, []);\n  const addFilterChainServiceCall = useROSService(addFilterChainServiceCallback, \"/proc_image_processing/manage_filterchain\", \"sonia_common/ManageFilterchain\");\n  const getFilterChainlistServiceCall = useROSService(getFilterChainlistServiceCallback, \"/proc_image_processing/get_information_list\", \"sonia_common/GetInformationList\");\n\n  const handleAddFilterChain = () => {\n    if (filterChainName !== '') {\n      var request = ServiceRequestFactory({\n        filterchain: filterChainName,\n        cmd: 1\n      });\n      addFilterChainServiceCall(request);\n      setTimeout(() => {\n        //Refresh filter chain list\n        var request2 = ServiceRequestFactory({\n          cmd: 3\n        });\n        getFilterChainlistServiceCall(request2);\n      }, 500);\n    }\n  };\n\n  const handSelectedFilterChain = (event, value) => {\n    setFieldHasFocus(false);\n    setFilterChainSelectedTab(value);\n  };\n\n  const copyFilterChainServiceCallback = useCallback(x => {}, []);\n  const copyFilterChainServiceCall = useROSService(copyFilterChainServiceCallback, \"/proc_image_processing/copy_filterchain\", \"sonia_common/CopyFilterchain\");\n\n  const handleCloneFilterChain = () => {\n    if (filterChainSelectedTab !== '' && filterChainName !== '') {\n      var request = ServiceRequestFactory({\n        filterchain_to_copy: filterChainSelectedTab,\n        filterchain_new_name: 'filterchain/' + filterChainName\n      });\n      copyFilterChainServiceCall(request);\n      setTimeout(() => {\n        //Refresh filter chain list\n        var request2 = ServiceRequestFactory({\n          cmd: 3\n        });\n        getFilterChainlistServiceCall(request2);\n      }, 500);\n    }\n  };\n\n  const deleteFilterChainServiceCallback = useCallback(x => {}, []);\n  const deleteFilterChainServiceCall = useROSService(deleteFilterChainServiceCallback, \"/proc_image_processing/manage_filterchain\", \"sonia_common/ManageFilterchain\");\n\n  const handleDeleteFilterChain = () => {\n    if (filterChainSelectedTab !== '') {\n      var request = ServiceRequestFactory({\n        filterchain: 'filterchain/' + filterChainSelectedTab,\n        cmd: 2\n      });\n      deleteFilterChainServiceCall(request);\n      setTimeout(() => {\n        //Refresh filter chain list\n        var request2 = ServiceRequestFactory({\n          cmd: 3\n        });\n        getFilterChainlistServiceCall(request2);\n      }, 500);\n    }\n  };\n\n  const [fieldHasFocus, setFieldHasFocus] = useState(true);\n\n  const handleFilterChainNameChange = e => {\n    setFilterChainName(e.target.value);\n    setFieldHasFocus(true);\n  };\n\n  function FilterChainList(props) {\n    const {\n      index,\n      style\n    } = props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filterChainList.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n        style: style,\n        selected: filterChainSelectedTab === item['value'],\n        autoFocus: filterChainSelectedTab === item['value'] && !fieldHasFocus,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: item['value'],\n          handler: event => handSelectedFilterChain(event, item['value'])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this)\n      }, \"filterChain\" + item['id'], false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      value: filterChainName,\n      autoFocus: fieldHasFocus,\n      handlerChange: handleFilterChainNameChange,\n      handlerKeyDown: () => {},\n      id: \"visionUi_filterChainName_id\",\n      label: \"Name\",\n      fullWidth: true,\n      style: {\n        padding: '10px 10px',\n        backgroundColor: 'white'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        fontSize: '15px',\n        marginTop: '10px',\n        float: 'left',\n        marginLeft: '10px'\n      },\n      handler: handleAddFilterChain,\n      label: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        fontSize: '15px',\n        marginTop: '10px',\n        float: 'left',\n        marginLeft: '10px'\n      },\n      handler: handleCloneFilterChain,\n      label: \"Clone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        fontSize: '15px',\n        marginTop: '10px',\n        float: 'left',\n        marginLeft: '10px'\n      },\n      handler: handleDeleteFilterChain,\n      label: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 155\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      label: /*#__PURE__*/_jsxDEV(CachedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 24\n      }, this),\n      handler: handleRefreshFilterChainList,\n      style: {\n        marginTop: '14px'\n      },\n      isIcon: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      maxHeight: 350,\n      children: /*#__PURE__*/_jsxDEV(FilterChainList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n};\n\n_s(VisionUIExecutionModule, \"2481rBcdUmfGJSE8QCuC6XfzYmM=\", false, function () {\n  return [useROSService, useROSService, useROSService, useROSService];\n});\n\n_c = VisionUIExecutionModule;\nexport default VisionUIExecutionModule;\n\nvar _c;\n\n$RefreshReg$(_c, \"VisionUIExecutionModule\");","map":{"version":3,"sources":["/home/alexemdesgagne/octopus-telemetry/src/src/components/VisionUiFilterChain.tsx"],"names":["React","useState","useCallback","TextField","Button","ListItemText","ListItem","List","MCachedIcon","CachedIcon","useROSService","ServiceRequestFactory","VisionUIExecutionModule","filterChainList","setfilterChainList","filterChainName","setFilterChainName","filterChainSelectedTab","setFilterChainSelectedTab","addFilterChainServiceCallback","x","handleRefreshFilterChainList","request","cmd","getFilterChainlistServiceCall","getFilterChainlistServiceCallback","receivedList","list","tab","split","forEach","v","index","push","value","sort","a","b","addFilterChainServiceCall","handleAddFilterChain","filterchain","setTimeout","request2","handSelectedFilterChain","event","setFieldHasFocus","copyFilterChainServiceCallback","copyFilterChainServiceCall","handleCloneFilterChain","filterchain_to_copy","filterchain_new_name","deleteFilterChainServiceCallback","deleteFilterChainServiceCall","handleDeleteFilterChain","fieldHasFocus","handleFilterChainNameChange","e","target","FilterChainList","props","style","map","item","padding","backgroundColor","fontSize","marginTop","float","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\n\nimport TextField from './common/textfield/Textfield';\nimport Button from './common/button/Button'\nimport ListItemText from './common/List/ListItemText';\nimport ListItem from './common/List/ListItem';\nimport List from './common/List/List';\nimport { MCachedIcon as CachedIcon } from './common/Icons/Icon';\n\nimport { useROSService, ServiceRequestFactory } from '../hooks/useROSService'\n\nconst VisionUIExecutionModule = () => {\n\n    ////////////////////////////////\n    // FILTER CHAIN TAB\n    ////////////////////////////////\n\n    const [filterChainList, setfilterChainList] = useState<[]>([]);\n    const [filterChainName, setFilterChainName] = useState('');\n    const [filterChainSelectedTab, setFilterChainSelectedTab] = React.useState('');\n\n    const addFilterChainServiceCallback = useCallback(\n        (x: any) => {\n        }, []\n    )\n\n    const handleRefreshFilterChainList = () => {\n        var request = ServiceRequestFactory({ cmd: 3 });\n        getFilterChainlistServiceCall(request)\n    }\n\n    const getFilterChainlistServiceCallback = useCallback(\n        (x: any) => {\n\n            var receivedList = x.list\n\n            var tab: any = []\n            receivedList.split(';').forEach((v: String, index: number) => {\n                tab.push({ value: v })\n            });\n\n            // Sort values\n            tab.sort((a: any, b: any) => a.value !== b.value ? a.value < b.value ? -1 : 1 : 0);\n\n            setfilterChainList(tab);\n\n        }, []\n    )\n\n    const addFilterChainServiceCall = useROSService<any>(addFilterChainServiceCallback, \"/proc_image_processing/manage_filterchain\", \"sonia_common/ManageFilterchain\");\n    const getFilterChainlistServiceCall = useROSService<any>(getFilterChainlistServiceCallback, \"/proc_image_processing/get_information_list\", \"sonia_common/GetInformationList\")\n\n    const handleAddFilterChain = () => {\n\n        if (filterChainName !== '') {\n\n            var request = ServiceRequestFactory({ filterchain: filterChainName, cmd: 1 });\n            addFilterChainServiceCall(request)\n\n            setTimeout(() => {\n                //Refresh filter chain list\n                var request2 = ServiceRequestFactory({ cmd: 3 });\n                getFilterChainlistServiceCall(request2)\n            }, 500)\n        }\n    }\n\n    const handSelectedFilterChain = (event: any, value: any) => {\n        setFieldHasFocus(false)\n        setFilterChainSelectedTab(value);\n    };\n\n    const copyFilterChainServiceCallback = useCallback(\n        (x: any) => {\n        }, []\n    )\n\n    const copyFilterChainServiceCall = useROSService<any>(copyFilterChainServiceCallback, \"/proc_image_processing/copy_filterchain\", \"sonia_common/CopyFilterchain\");\n\n    const handleCloneFilterChain = () => {\n\n        if (filterChainSelectedTab !== '' && filterChainName !== '') {\n\n            var request = ServiceRequestFactory({ filterchain_to_copy: filterChainSelectedTab, filterchain_new_name: 'filterchain/' + filterChainName });\n            copyFilterChainServiceCall(request)\n\n            setTimeout(() => {\n                //Refresh filter chain list\n                var request2 = ServiceRequestFactory({ cmd: 3 });\n                getFilterChainlistServiceCall(request2)\n            }, 500)\n        }\n    }\n\n    const deleteFilterChainServiceCallback = useCallback(\n        (x: any) => {\n        }, []\n    )\n\n    const deleteFilterChainServiceCall = useROSService<any>(deleteFilterChainServiceCallback, \"/proc_image_processing/manage_filterchain\", \"sonia_common/ManageFilterchain\");\n\n    const handleDeleteFilterChain = () => {\n\n        if (filterChainSelectedTab !== '') {\n\n            var request = ServiceRequestFactory({ filterchain: 'filterchain/' + filterChainSelectedTab, cmd: 2 });\n            deleteFilterChainServiceCall(request)\n\n            setTimeout(() => {\n                //Refresh filter chain list\n                var request2 = ServiceRequestFactory({ cmd: 3 });\n                getFilterChainlistServiceCall(request2)\n            }, 500)\n        }\n    }\n\n    const [fieldHasFocus, setFieldHasFocus] = useState(true)\n\n    const handleFilterChainNameChange = (e: any) => {\n        setFilterChainName(e.target.value)\n        setFieldHasFocus(true)\n\n    }\n\n    function FilterChainList(props: any) {\n        const { index, style } = props;\n        return (\n            <div>\n                {filterChainList.map((item) => (\n                    <ListItem style={style} key={\"filterChain\" + item['id']} selected={filterChainSelectedTab === item['value']} autoFocus={filterChainSelectedTab === item['value'] && !fieldHasFocus}>\n                        <ListItemText primary={item['value']} handler={(event: any) => handSelectedFilterChain(event, item['value'])} />\n                    </ListItem>\n                ))}\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <TextField value={filterChainName} autoFocus={fieldHasFocus} handlerChange={handleFilterChainNameChange} handlerKeyDown={() => { }} id=\"visionUi_filterChainName_id\" label=\"Name\"\n                fullWidth={true} style={{ padding: '10px 10px', backgroundColor: 'white' }} />\n            <Button style={{ fontSize: '15px', marginTop: '10px', float: 'left', marginLeft: '10px' }} handler={handleAddFilterChain} label=\"Add\" />\n            <Button style={{ fontSize: '15px', marginTop: '10px', float: 'left', marginLeft: '10px' }} handler={handleCloneFilterChain} label=\"Clone\" />\n            <Button style={{ fontSize: '15px', marginTop: '10px', float: 'left', marginLeft: '10px' }} handler={handleDeleteFilterChain} label=\"Delete\" /><br></br>\n            <Button\n                label={<CachedIcon />}\n                handler={handleRefreshFilterChainList}\n                style={{ marginTop: '14px' }}\n                isIcon={true}\n            />\n            <List maxHeight={350}><FilterChainList /></List>\n        </div>\n\n    );\n};\n\nexport default VisionUIExecutionModule;\n"]},"metadata":{},"sourceType":"module"}