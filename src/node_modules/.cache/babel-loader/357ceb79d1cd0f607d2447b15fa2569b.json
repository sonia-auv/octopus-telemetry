{"ast":null,"code":"var _jsxFileName = \"/home/alexemdesgagne/octopus-telemetry/src/src/components/common/switch/Switch.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './switch.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getLabelClassname = checked => checked ? 'Switch__label-checked' : 'Switch__label-unchecked';\n\nconst Switch = props => {\n  _s();\n\n  const [on, setOn] = useState(props.value);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `Switch__container ${props.vertical ? 'vertical' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: getLabelClassname(on),\n      children: props.onLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: `switch ${props.vertical ? 'vertical' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: on,\n        onChange: () => {\n          // Allows us to test the component (w/ mock handler)\n          setOn(!on); // We dispatch the parent with the switch value\n\n          props.handler(on);\n        },\n        \"data-testid\": \"test-switch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `Switch__slider ${props.round ? 'round' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: getLabelClassname(!on),\n      children: props.offLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Switch, \"QeTJs9mdbZla4Efce65r/gQN1Fs=\");\n\n_c = Switch;\nSwitch.defaultProps = {\n  onLabel: 'On',\n  offLabel: 'Off',\n  vertical: false,\n  round: true\n};\nexport default Switch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Switch\");","map":{"version":3,"sources":["/home/alexemdesgagne/octopus-telemetry/src/src/components/common/switch/Switch.tsx"],"names":["useState","getLabelClassname","checked","Switch","props","on","setOn","value","vertical","onLabel","handler","round","offLabel","defaultProps"],"mappings":";;;AAAA,SAA4BA,QAA5B,QAA4C,OAA5C;AACA,OAAO,cAAP;;;AAWA,MAAMC,iBAAiB,GAAIC,OAAD,IACxBA,OAAO,GAAG,uBAAH,GAA6B,yBADtC;;AAGA,MAAMC,MAAsC,GAAIC,KAAD,IAAW;AAAA;;AACxD,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcN,QAAQ,CAACI,KAAK,CAACG,KAAP,CAA5B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAG,qBAAoBH,KAAK,CAACI,QAAN,GAAiB,UAAjB,GAA8B,EAAG,EAAtE;AAAA,4BACE;AAAG,MAAA,SAAS,EAAEP,iBAAiB,CAACI,EAAD,CAA/B;AAAA,gBAAsCD,KAAK,CAACK;AAA5C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,SAAS,EAAG,UAASL,KAAK,CAACI,QAAN,GAAiB,UAAjB,GAA8B,EAAG,EAA7D;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,OAAO,EAAEH,EAFX;AAGE,QAAA,QAAQ,EAAE,MAAM;AACd;AACAC,UAAAA,KAAK,CAAC,CAACD,EAAF,CAAL,CAFc,CAId;;AACAD,UAAAA,KAAK,CAACM,OAAN,CAAcL,EAAd;AACD,SATH;AAUE,uBAAY;AAVd;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAM,QAAA,SAAS,EAAG,kBAAiBD,KAAK,CAACO,KAAN,GAAc,OAAd,GAAwB,EAAG;AAA9D;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAiBE;AAAG,MAAA,SAAS,EAAEV,iBAAiB,CAAC,CAACI,EAAF,CAA/B;AAAA,gBAAuCD,KAAK,CAACQ;AAA7C;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAxBD;;GAAMT,M;;KAAAA,M;AA0BNA,MAAM,CAACU,YAAP,GAAsB;AACpBJ,EAAAA,OAAO,EAAE,IADW;AAEpBG,EAAAA,QAAQ,EAAE,KAFU;AAGpBJ,EAAAA,QAAQ,EAAE,KAHU;AAIpBG,EAAAA,KAAK,EAAE;AAJa,CAAtB;AAOA,eAAeR,MAAf","sourcesContent":["import { FunctionComponent, useState } from 'react';\nimport './switch.css';\n\ntype SwitchProps = {\n  onLabel?: string;\n  offLabel?: string;\n  value: boolean;\n  vertical?: boolean;\n  handler: (value: boolean) => void;\n  round?: boolean;\n};\n\nconst getLabelClassname = (checked: boolean) =>\n  checked ? 'Switch__label-checked' : 'Switch__label-unchecked';\n\nconst Switch: FunctionComponent<SwitchProps> = (props) => {\n  const [on, setOn] = useState(props.value);\n\n  return (\n    <div className={`Switch__container ${props.vertical ? 'vertical' : ''}`}>\n      <p className={getLabelClassname(on)}>{props.onLabel}</p>\n      <label className={`switch ${props.vertical ? 'vertical' : ''}`}>\n        <input\n          type=\"checkbox\"\n          checked={on}\n          onChange={() => {\n            // Allows us to test the component (w/ mock handler)\n            setOn(!on);\n\n            // We dispatch the parent with the switch value\n            props.handler(on);\n          }}\n          data-testid=\"test-switch\"\n        />\n        <span className={`Switch__slider ${props.round ? 'round' : ''}`}></span>\n      </label>\n      <p className={getLabelClassname(!on)}>{props.offLabel}</p>\n    </div>\n  );\n};\n\nSwitch.defaultProps = {\n  onLabel: 'On',\n  offLabel: 'Off',\n  vertical: false,\n  round: true,\n};\n\nexport default Switch;\n"]},"metadata":{},"sourceType":"module"}