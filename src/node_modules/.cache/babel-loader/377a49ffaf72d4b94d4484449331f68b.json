{"ast":null,"code":"var _jsxFileName = \"/home/alexemdesgagne/octopus-telemetry/src/src/components/common/slider/ThrusterEffortIndicatorSlider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Slider as MUISlider } from '@material-ui/core';\nimport { GeneralContext } from \"../../../context/generalContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Select = props => {\n  _s();\n\n  const context = useContext(GeneralContext);\n  const GenericThrusterEffortIndicatorSlider = withStyles({\n    root: {\n      \"&.MuiSlider-vertical\": {\n        width: '80px',\n        padding: '0px 22px',\n        marginTop: '30px'\n      }\n    },\n    thumb: {\n      \"&.Mui-disabled\": {\n        color: 'gba(37, 35, 35, 0.64)',\n        width: '72px',\n        height: '3px',\n        borderRadius: '0px',\n        \"& .triangleLeft\": {\n          height: 0,\n          width: 0,\n          borderTop: '12px solid transparent',\n          borderBottom: '12px solid transparent',\n          borderLeft: '16px solid currentColor',\n          marginRight: '38px',\n          marginTop: '0px'\n        },\n        \"& .triangleRight\": {\n          height: 0,\n          width: 0,\n          borderTop: '12px solid transparent',\n          borderBottom: '12px solid transparent',\n          borderRight: '16px solid currentColor',\n          marginLeft: '20px',\n          marginTop: '0px'\n        }\n      }\n    },\n    vertical: {\n      \"& .MuiSlider-thumb\": {\n        \"&.Mui-disabled\": {\n          marginBottom: '0px',\n          marginLeft: '-6px'\n        }\n      }\n    },\n    mark: {\n      color: 'black',\n      backgroundColor: 'black',\n      opacity: 1.0,\n      width: '60px',\n      height: '3px'\n    },\n    marked: {\n      \"&.MuiSlider-vertical\": {\n        marginBottom: '30px',\n        marginTop: '30px'\n      }\n    },\n    markActive: {\n      color: 'black',\n      backgroundColor: 'black',\n      opacity: 1.0,\n      width: '60px'\n    },\n    rail: {\n      color: 'black',\n      opacity: 1.0,\n      marginLeft: '30px'\n    },\n    track: {\n      color: 'black',\n      opacity: 1.0,\n      marginLeft: '30px'\n    },\n    markLabel: {\n      color: context.isDarkMode ? \"white\" : 'black',\n      marginLeft: '80px',\n      fontWeight: 'bold'\n    }\n  })(MUISlider);\n  return /*#__PURE__*/_jsxDEV(GenericThrusterEffortIndicatorSlider, {\n    \"data-testid\": \"test-ThrusterEffortIndicatorSlider\",\n    value: props.value,\n    orientation: props.orientation,\n    min: props.min,\n    max: props.max,\n    disabled: props.disabled,\n    valueLabelDisplay: props.valueLabelDisplay,\n    marks: props.marks,\n    ThumbComponent: props.ThumbComponent,\n    defaultValue: props.defaultValue,\n    onChange: props.handlerChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Select, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n_c = Select;\nSelect.defaultProps = {\n  disabled: false,\n  valueLabelDisplay: \"on\"\n};\nexport default Select;\n\nvar _c;\n\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"sources":["/home/alexemdesgagne/octopus-telemetry/src/src/components/common/slider/ThrusterEffortIndicatorSlider.tsx"],"names":["React","useContext","withStyles","Slider","MUISlider","GeneralContext","Select","props","context","GenericThrusterEffortIndicatorSlider","root","width","padding","marginTop","thumb","color","height","borderRadius","borderTop","borderBottom","borderLeft","marginRight","borderRight","marginLeft","vertical","marginBottom","mark","backgroundColor","opacity","marked","markActive","rail","track","markLabel","isDarkMode","fontWeight","value","orientation","min","max","disabled","valueLabelDisplay","marks","ThumbComponent","defaultValue","handlerChange","defaultProps"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useContext } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Slider as MUISlider } from '@material-ui/core';\nimport { GeneralContext } from \"../../../context/generalContext\";\n\ntype ThrusterEffortIndicatorSliderProps = {\n    value?: number | number[]\n    orientation?: \"horizontal\" | \"vertical\"\n    min?: number;\n    max?: number;\n    disabled?: boolean\n    valueLabelDisplay?: \"auto\" | \"on\" | \"off\"\n    marks?: any\n    ThumbComponent?: React.ElementType<React.HTMLAttributes<HTMLSpanElement>>\n    defaultValue?: number\n    handlerChange: (event: React.ChangeEvent<{}>, value: number | number[]) => void;\n};\n\nconst Select: FunctionComponent<ThrusterEffortIndicatorSliderProps> = (props) => {\n\n    const context = useContext(GeneralContext)\n    const GenericThrusterEffortIndicatorSlider = withStyles({\n\n        root: {\n            \"&.MuiSlider-vertical\": {\n                width: '80px',\n                padding: '0px 22px',\n                marginTop: '30px',\n            },\n        },\n\n        thumb: {\n            \"&.Mui-disabled\": {\n                color: 'gba(37, 35, 35, 0.64)',\n                width: '72px',\n                height: '3px',\n                borderRadius: '0px',\n                \"& .triangleLeft\": {\n                    height: 0,\n                    width: 0,\n                    borderTop: '12px solid transparent',\n                    borderBottom: '12px solid transparent',\n                    borderLeft: '16px solid currentColor',\n                    marginRight: '38px',\n                    marginTop: '0px'\n                },\n                \"& .triangleRight\": {\n                    height: 0,\n                    width: 0,\n                    borderTop: '12px solid transparent',\n                    borderBottom: '12px solid transparent',\n                    borderRight: '16px solid currentColor',\n                    marginLeft: '20px',\n                    marginTop: '0px'\n                },\n            },\n        },\n\n        vertical: {\n            \"& .MuiSlider-thumb\": {\n                \"&.Mui-disabled\": {\n                    marginBottom: '0px',\n                    marginLeft: '-6px'\n                }\n            }\n        },\n        mark: {\n            color: 'black',\n            backgroundColor: 'black',\n            opacity: 1.0,\n            width: '60px',\n            height: '3px'\n        },\n        marked: {\n            \"&.MuiSlider-vertical\": {\n                marginBottom: '30px',\n                marginTop: '30px',\n            },\n        },\n        markActive: {\n            color: 'black',\n            backgroundColor: 'black',\n            opacity: 1.0,\n            width: '60px',\n        },\n        rail: {\n            color: 'black',\n            opacity: 1.0,\n            marginLeft: '30px'\n        },\n        track: {\n            color: 'black',\n            opacity: 1.0,\n            marginLeft: '30px'\n        },\n        markLabel: {\n            color: context.isDarkMode ? \"white\" : 'black',\n            marginLeft: '80px',\n            fontWeight: 'bold'\n        },\n    })(MUISlider);\n\n    return (\n        <GenericThrusterEffortIndicatorSlider\n            data-testid=\"test-ThrusterEffortIndicatorSlider\"\n            value={props.value}\n            orientation={props.orientation}\n            min={props.min}\n            max={props.max}\n            disabled={props.disabled}\n            valueLabelDisplay={props.valueLabelDisplay}\n            marks={props.marks}\n            ThumbComponent={props.ThumbComponent}\n            defaultValue={props.defaultValue}\n            onChange={props.handlerChange}\n        >\n        </GenericThrusterEffortIndicatorSlider>\n    )\n};\n\nSelect.defaultProps = {\n    disabled: false,\n    valueLabelDisplay: \"on\"\n};\n\nexport default Select;\n"]},"metadata":{},"sourceType":"module"}