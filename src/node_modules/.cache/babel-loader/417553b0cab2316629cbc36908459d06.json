{"ast":null,"code":"var _jsxFileName = \"/home/alexemdesgagne/octopus-telemetry/src/src/components/MissionManager.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useContext } from 'react';\nimport { GeneralContext } from \"../context/generalContext\";\nimport { InputLabel, FormControl } from '@material-ui/core';\nimport Button from './common/button/Button';\nimport Select from './common/select/Select';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { useROSService } from '../hooks/useROSService';\nimport { useROSTopicPublisher } from '../hooks/useROSTopicPublisher';\nimport ROSLIB from \"roslib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MissionManager = () => {\n  _s();\n\n  const useStyles = makeStyles(theme => createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      width: '80%'\n    }\n  }));\n  const classes = useStyles();\n  const [currentMissionName, setCurrentMissionName] = useState(\"\");\n  const [missions, setMissionsList] = useState([]); // Reponse en retour a l appel du service\n\n  const missionListCallback = useCallback(response => {\n    let missionsList;\n    missionsList = [];\n    var tempList = JSON.parse(JSON.stringify(response));\n    tempList = tempList[\"missions\"];\n    tempList = tempList.split(\";\");\n    tempList.sort(function (a, b) {\n      if (a.toLowerCase() < b.toLowerCase()) {\n        return -1;\n      } else if (a.toLowerCase() > b.toLowerCase()) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n    tempList.forEach(name => {\n      if (name !== \"\") {\n        missionsList.push(name);\n      }\n    });\n    console.log(missionsList);\n    setMissionsList(missionsList);\n  }, []);\n  const context = useContext(GeneralContext);\n  const missionNameMsgPublisher = useROSTopicPublisher(\"/mission_manager/mission_name_msg\", \"/mission_manager/MissionNameMsg\");\n  const missionManagerServiceCall = useROSService(missionListCallback, \"/mission_executor/list_missions\", \"ListMissions\"); // Selection d une missions dans le select.\n\n  const behaviorSelected = event => {\n    setCurrentMissionName(event.target.value);\n  }; // Publish du nom de la mission.\n\n\n  const loadMission = () => {\n    var toPublish = new ROSLIB.Message({\n      name: currentMissionName\n    });\n    missionNameMsgPublisher(toPublish);\n  }; // Appel du service pour update la liste de missions.\n\n\n  const updateMissionList = async () => {\n    missionManagerServiceCall({});\n  };\n\n  return /*#__PURE__*/_jsxDEV(GeneralContext.Consumer, {\n    children: context => context && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '100%',\n        flexDirection: 'row',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: '20px',\n          textAlign: 'center'\n        },\n        children: \"Mission Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"mission-manager-simple-select-outlined-label\",\n          children: \"Mission\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"select-outlined-label\",\n          id: \"select-outlined\",\n          label: \"Mission\",\n          handlerChange: behaviorSelected,\n          value: currentMissionName,\n          listValue: missions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: '20px',\n          textAlign: 'center'\n        },\n        children: \"Update List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          fontSize: '20px',\n          alignSelf: 'center'\n        },\n        handler: updateMissionList,\n        label: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: '20px',\n          textAlign: 'center'\n        },\n        children: \"Load Mission\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: missions.length === 0,\n        style: {\n          fontSize: '20px',\n          alignSelf: 'center'\n        },\n        handler: loadMission,\n        label: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MissionManager, \"qp8/TOHR/AfbaRCtDme6znBc2FY=\", true, function () {\n  return [useROSTopicPublisher, useROSService];\n});\n\n_c = MissionManager;\nexport default MissionManager;\n\nvar _c;\n\n$RefreshReg$(_c, \"MissionManager\");","map":{"version":3,"sources":["/home/alexemdesgagne/octopus-telemetry/src/src/components/MissionManager.tsx"],"names":["React","useState","useCallback","useContext","GeneralContext","InputLabel","FormControl","Button","Select","makeStyles","createStyles","useROSService","useROSTopicPublisher","ROSLIB","MissionManager","useStyles","theme","formControl","margin","spacing","width","classes","currentMissionName","setCurrentMissionName","missions","setMissionsList","missionListCallback","response","missionsList","tempList","JSON","parse","stringify","split","sort","a","b","toLowerCase","forEach","name","push","console","log","context","missionNameMsgPublisher","missionManagerServiceCall","behaviorSelected","event","target","value","loadMission","toPublish","Message","updateMissionList","height","flexDirection","textAlign","fontSize","alignSelf","length"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useContext } from 'react';\nimport { GeneralContext } from \"../context/generalContext\";\nimport {  InputLabel, FormControl} from '@material-ui/core';\nimport MenuItem from './common/Menu/MenuItem';\nimport Button from './common/button/Button';\nimport Select from './common/select/Select';\nimport { makeStyles, createStyles, Theme} from '@material-ui/core/styles';\nimport { useROSService } from '../hooks/useROSService'\nimport { useROSTopicPublisher } from '../hooks/useROSTopicPublisher'\nimport ROSLIB from \"roslib\";\n\nconst MissionManager = () => {\n\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            formControl: {\n                margin: theme.spacing(1),\n                width: '80%',\n            }\n        }),\n        );\n\n    const classes = useStyles();\n\n    const [currentMissionName, setCurrentMissionName] = useState(\"\");\n    const [missions, setMissionsList] = useState<string[]>([]);\n\n    // Reponse en retour a l appel du service\n    const missionListCallback = useCallback(\n        (response: ROSLIB.ServiceResponse) => {\n            let missionsList: Array<string>\n            missionsList = []\n            var tempList = JSON.parse(JSON.stringify(response));\n            tempList = tempList[\"missions\"];\n            tempList = tempList.split(\";\");\n            tempList.sort(function (a: string, b: string) {\n              if ( a.toLowerCase() < b.toLowerCase() ) {\n                  return -1;\n              } else if ( a.toLowerCase() > b.toLowerCase() ) {\n                  return 1;\n              } else {\n                  return 0;\n              }});\n            tempList.forEach((name: string) => {\n              if(name !== \"\"){\n                missionsList.push(name);\n              }\n            });\n            console.log(missionsList);\n            setMissionsList(missionsList);\n          },\n          []\n    )\n\n    const context = useContext(GeneralContext)\n    const missionNameMsgPublisher = useROSTopicPublisher<any>(\"/mission_manager/mission_name_msg\", \"/mission_manager/MissionNameMsg\");\n    const missionManagerServiceCall = useROSService<any>(missionListCallback, \"/mission_executor/list_missions\", \"ListMissions\")\n\n    // Selection d une missions dans le select.\n    const behaviorSelected = (event: React.ChangeEvent<{ value: unknown }>) => {\n        setCurrentMissionName(event.target.value as string);\n    }\n\n    // Publish du nom de la mission.\n    const loadMission = () => {\n        var toPublish = new ROSLIB.Message({name: currentMissionName});\n        missionNameMsgPublisher(toPublish);\n    }\n\n    // Appel du service pour update la liste de missions.\n    const updateMissionList = async () => {\n        missionManagerServiceCall({}); \n    }\n\n    return (\n        <GeneralContext.Consumer>\n            {context => context && (\n                <div style={{ width: '100%', height: '100%', flexDirection: 'row', textAlign: 'center' }}>\n                    <h1 style={{ fontSize: '20px', textAlign: 'center' }}>Mission Manager</h1>            \n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                        <InputLabel id=\"mission-manager-simple-select-outlined-label\">Mission</InputLabel>\n                        <Select\n                        labelId=\"select-outlined-label\"\n                        id=\"select-outlined\"\n                        label=\"Mission\"\n                        handlerChange={behaviorSelected}\n                        value={currentMissionName}\n                        listValue={missions}\n                        >\n                    </Select>\n                    </FormControl>\n                    <h1 style={{ fontSize: '20px', textAlign: 'center' }}>Update List</h1>\n                    <Button style={{ fontSize: '20px', alignSelf: 'center' }} handler={updateMissionList} label=\"Update\"/>\n                    <h1 style={{ fontSize: '20px', textAlign: 'center' }}>Load Mission</h1>\n                    <Button disabled={missions.length === 0} style={{ fontSize: '20px', alignSelf: 'center' }} handler={loadMission} label=\"Send\"/>\n                </div>\n            )}\n        </GeneralContext.Consumer>\n    );\n};\n\nexport default MissionManager;\n"]},"metadata":{},"sourceType":"module"}