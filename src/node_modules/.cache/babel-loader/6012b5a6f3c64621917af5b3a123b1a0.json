{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport ROSLIB from \"roslib\";\nimport { RosContext } from \"../context/rosContext\";\nexport const useROSTopicPublisher = (name, messageType) => {\n  _s();\n\n  const ros = useContext(RosContext);\n  const [topic, setTopic] = useState(null);\n  useEffect(() => {\n    setTopic(new ROSLIB.Topic({\n      ros,\n      name,\n      messageType,\n      throttle_rate: 1000\n    }));\n  }, [ros]);\n  return x => {\n    if (topic) {\n      topic.publish(x);\n    }\n  };\n};\n\n_s(useROSTopicPublisher, \"n7icG0h56ggKMfSTAtmHMMKYp94=\");\n\nexport function MessageFactory(x) {\n  return new ROSLIB.Message(x);\n}\n_c = MessageFactory;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageFactory\");","map":{"version":3,"sources":["/home/alexemdesgagne/octopus-telemetry/src/src/hooks/useROSTopicPublisher.ts"],"names":["useState","useEffect","useContext","ROSLIB","RosContext","useROSTopicPublisher","name","messageType","ros","topic","setTopic","Topic","throttle_rate","x","publish","MessageFactory","Message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AAEA,OAAO,MAAMC,oBAAoB,GAAG,CAClCC,IADkC,EAElCC,WAFkC,KAG/B;AAAA;;AACH,QAAMC,GAAG,GAAGN,UAAU,CAACE,UAAD,CAAtB;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAsB,IAAtB,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CACN,IAAIP,MAAM,CAACQ,KAAX,CAAiB;AACfH,MAAAA,GADe;AAEfF,MAAAA,IAFe;AAGfC,MAAAA,WAHe;AAIfK,MAAAA,aAAa,EAAE;AAJA,KAAjB,CADM,CAAR;AAQD,GATQ,EASN,CAACJ,GAAD,CATM,CAAT;AAWA,SAAQK,CAAD,IAAU;AACf,QAAIJ,KAAJ,EAAW;AACTA,MAAAA,KAAK,CAACK,OAAN,CAAcD,CAAd;AACD;AACF,GAJD;AAKD,CAvBM;;GAAMR,oB;;AAyBb,OAAO,SAASU,cAAT,CAAwBF,CAAxB,EAA+C;AAAE,SAAO,IAAIV,MAAM,CAACa,OAAX,CAAmBH,CAAnB,CAAP;AAA8B;KAAtEE,c;AAAsE","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport ROSLIB from \"roslib\";\r\nimport { RosContext } from \"../context/rosContext\";\r\n\r\nexport const useROSTopicPublisher = <F>(\r\n  name: string,\r\n  messageType: string\r\n) => {\r\n  const ros = useContext(RosContext);\r\n  const [topic, setTopic] = useState<ROSLIB.Topic | null>(null);\r\n\r\n  useEffect(() => {\r\n    setTopic(\r\n      new ROSLIB.Topic({\r\n        ros,\r\n        name,\r\n        messageType,\r\n        throttle_rate: 1000,\r\n      })\r\n    );\r\n  }, [ros]);\r\n\r\n  return (x: F) => {\r\n    if (topic) {\r\n      topic.publish(x);\r\n    }\r\n  };\r\n};\r\n\r\nexport function MessageFactory(x: any):ROSLIB.Message { return new ROSLIB.Message(x) };"]},"metadata":{},"sourceType":"module"}