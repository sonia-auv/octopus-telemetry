{"ast":null,"code":"var _jsxFileName = \"/home/alexemdesgagne/octopus-telemetry/src/src/components/Waypoints.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useContext, useState } from 'react';\nimport Switch from './common/switch/Switch';\nimport { GeneralContext } from \"../context/generalContext\";\nimport Button from './common/button/Button';\nimport TextField from './common/textfield/Textfield';\nimport { useROSService, ServiceRequestFactory } from '../hooks/useROSService';\nimport { useROSTopicSubscriber } from \"../hooks/useROSTopicSubscriber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Waypoints = () => {\n  _s();\n\n  const context = useContext(GeneralContext); //////////////////////////////////////\n  // CONTROL MODE\n  //////////////////////////////////////\n  // Service response\n\n  const controlModeServiceCallback = useCallback(x => {}, []);\n\n  const HandleChangeSwitch = () => {\n    context.setIsWayPointVelocityMode(!context.isWayPointVelocityMode);\n    var mode;\n    if (!context.isWayPointVelocityMode) mode = 0;\n    if (context.isWayPointVelocityMode) mode = 2;\n    var request = ServiceRequestFactory({\n      mode: mode\n    });\n    controlModeServiceCall(request);\n  };\n\n  const controlModeServiceCall = useROSService(controlModeServiceCallback, \"/proc_control/set_control_mode\", \"sonia_common/SetControlMode\"); //////////////////////////////////////\n  // CLEAR WAYPOINT\n  //////////////////////////////////////\n  // Service response\n\n  const clearWaypointServiceCallback = useCallback(x => {}, []);\n\n  const handleClearWayPoint = () => {\n    var request = ServiceRequestFactory({});\n    clearWayPointServiceCall(request);\n  };\n\n  const clearWayPointServiceCall = useROSService(clearWaypointServiceCallback, \"/proc_control/clear_waypoint\", \"sonia_common/ClearWaypoint\"); //////////////////////////////////////\n  // SET INITIAL POSITION\n  //////////////////////////////////////\n  // Service response\n\n  const setInitialPositionServiceCallback = useCallback(x => {}, []);\n\n  const handleSetInitialPosition = () => {\n    var request = ServiceRequestFactory({});\n    setInitialPositionServiceCall(request); // Send clear waypoint with 500 ms delay\n\n    setTimeout(handleClearWayPoint, 500);\n  };\n\n  const setInitialPositionServiceCall = useROSService(setInitialPositionServiceCallback, \"/proc_navigation/set_world_x_y_offset\", \"sonia_common/SetWorldXYOffset\"); //////////////////////////////////////\n  // SET DEPTH OFFSET\n  //////////////////////////////////////\n  // Service response\n\n  const setDepthOffsetServiceCallback = useCallback(x => {}, []);\n\n  const handleSetDepthOffset = value => {\n    var request = ServiceRequestFactory({});\n    setDepthOffsetServiceCall(request);\n  };\n\n  const setDepthOffsetServiceCall = useROSService(setDepthOffsetServiceCallback, \"/proc_navigation/set_depth_offset\", \"sonia_common/SetDepthOffset\");\n\n  const checkSyntax = v => [...v].every(c => '0123456789.-'.includes(c));\n\n  const [cmdX, setCmdX] = useState('0.00');\n  const [lastValidCmdX, setLastValidCmdX] = useState('0.00');\n  const [cmdY, setCmdY] = useState('0.00');\n  const [lastValidCmdY, setLastValidCmdY] = useState('0.00');\n  const [cmdZ, setCmdZ] = useState('0.00');\n  const [lastValidCmdZ, setLastValidCmdZ] = useState('0.00');\n  const [cmdRoll, setCmdRoll] = useState('0.00');\n  const [lastValidCmdRoll, setLastValidCmdRoll] = useState('0.00');\n  const [cmdPitch, setCmdPitch] = useState('0.00');\n  const [lastValidCmdPitch, setLastValidCmdPitch] = useState('0.00');\n  const [cmdYaw, setCmdYaw] = useState('0.00');\n  const [lastValidCmdYaw, setLastValidCmdYaw] = useState('0.00');\n\n  const handleCmdXChange = e => {\n    if (checkSyntax(e.target.value)) {\n      setCmdX(e.target.value);\n    }\n  };\n\n  const handleCmdYChange = e => {\n    if (checkSyntax(e.target.value)) {\n      setCmdY(e.target.value);\n    }\n  };\n\n  const handleCmdZChange = e => {\n    if (checkSyntax(e.target.value)) {\n      setCmdZ(e.target.value);\n    }\n  };\n\n  const handleCmdRollChange = e => {\n    if (checkSyntax(e.target.value)) {\n      setCmdRoll(e.target.value);\n    }\n  };\n\n  const handleCmdPitchChange = e => {\n    if (checkSyntax(e.target.value)) {\n      setCmdPitch(e.target.value);\n    }\n  };\n\n  const handleCmdYawChange = e => {\n    if (checkSyntax(e.target.value)) {\n      setCmdYaw(e.target.value);\n    }\n  }; //////////////////////////////////////\n  // SEND TARGET POSITIONS\n  //////////////////////////////////////\n  // Service response\n\n\n  const sendPositionTargetServiceCallback = useCallback(x => {}, []);\n  const sendPositionTargetServiceCall = useROSService(sendPositionTargetServiceCallback, \"/proc_control/set_global_target\", \"sonia_common/SetPositionTarget\");\n\n  const handleCmdKeyDown = e => {\n    if (e.key === 'Enter') {\n      // Handle command X axis\n      var x = parseFloat(cmdX);\n      var finalX;\n\n      if (!isNaN(x)) {\n        //Input is valid\n        setLastValidCmdX(cmdX);\n        finalX = cmdX;\n      } else {\n        //Use last valid value instead\n        finalX = parseFloat(lastValidCmdX);\n      } // Handle command Y axis\n\n\n      var y = parseFloat(cmdY);\n      var finalY;\n\n      if (!isNaN(y)) {\n        //Input is valid\n        setLastValidCmdY(cmdY);\n        finalY = cmdY;\n      } else {\n        //Use last valid value instead\n        finalY = parseFloat(lastValidCmdY);\n      } // Handle command Z axis\n\n\n      var z = parseFloat(cmdZ);\n      var finalZ;\n\n      if (!isNaN(z)) {\n        //Input is valid\n        setLastValidCmdZ(cmdZ);\n        finalZ = cmdZ;\n      } else {\n        //Use last valid value instead\n        finalZ = parseFloat(lastValidCmdZ);\n      } // Handle command Roll axis\n\n\n      var roll = parseFloat(cmdRoll);\n      var finalRoll;\n\n      if (!isNaN(roll)) {\n        //Input is valid\n        setLastValidCmdRoll(cmdRoll);\n        finalRoll = cmdRoll;\n      } else {\n        //Use last valid value instead\n        finalRoll = parseFloat(lastValidCmdRoll);\n      } // Handle command Pitch axis\n\n\n      var pitch = parseFloat(cmdPitch);\n      var finalPitch;\n\n      if (!isNaN(pitch)) {\n        //Input is valid\n        setLastValidCmdPitch(cmdPitch);\n        finalPitch = cmdPitch;\n      } else {\n        //Use last valid value instead\n        finalPitch = parseFloat(lastValidCmdPitch);\n      } // Handle command Yaw axis\n\n\n      var yaw = parseFloat(cmdYaw);\n      var finalYaw;\n\n      if (!isNaN(yaw)) {\n        //Input is valid\n        setLastValidCmdYaw(cmdYaw);\n        finalYaw = cmdYaw;\n      } else {\n        //Use last valid value instead\n        finalYaw = parseFloat(lastValidCmdYaw);\n      } //Depth is limited to 3\n\n\n      if (finalZ > 3) {\n        finalZ = 3;\n        setLastValidCmdZ('3.0');\n        setCmdZ('3.0');\n      }\n\n      var request = ServiceRequestFactory({\n        X: finalX,\n        Y: finalY,\n        Z: finalZ,\n        ROLL: finalRoll,\n        PICH: finalPitch,\n        YAW: finalYaw\n      });\n      sendPositionTargetServiceCall(request);\n    }\n  }; /////////////////////////////////////\n  // CONTROL MODE FEEDBACK\n  /////////////////////////////////////\n\n\n  const controlModeCallback = useCallback(x => {\n    if (x.data === 0) context.setIsWayPointVelocityMode(false);\n    if (x.data === 2) context.setIsWayPointVelocityMode(true);\n  }, []);\n  useROSTopicSubscriber(controlModeCallback, \"/proc_control/control_mode\", \"std_msgs/UInt8\"); /////////////////////////////////////\n  // POSITION TARGET FEEDBACK\n  /////////////////////////////////////\n\n  const positionTargetFeedBackCallback = useCallback(x => {\n    setCmdX(x.position.x.toFixed(2));\n    setLastValidCmdX(x.position.x.toFixed(2));\n    setCmdY(x.position.y.toFixed(2));\n    setLastValidCmdY(x.position.y.toFixed(2));\n    setCmdZ(x.position.z.toFixed(2));\n    setLastValidCmdZ(x.position.z.toFixed(2));\n    setCmdRoll(x.orientation.x.toFixed(2));\n    setLastValidCmdRoll(x.orientation.x.toFixed(2));\n    setCmdPitch(x.orientation.y.toFixed(2));\n    setLastValidCmdPitch(x.orientation.y.toFixed(2));\n    setCmdYaw(x.orientation.z.toFixed(2));\n    setLastValidCmdYaw(x.orientation.z.toFixed(2));\n  }, []);\n  const velocityTargetFeedBackCallback = useCallback(x => {\n    setCmdX(x.linear.x.toFixed(2));\n    setLastValidCmdX(x.linear.x.toFixed(2));\n    setCmdY(x.linear.y.toFixed(2));\n    setLastValidCmdY(x.linear.y.toFixed(2));\n    setCmdZ(x.linear.z.toFixed(2));\n    setLastValidCmdZ(x.linear.z.toFixed(2));\n    setCmdRoll(x.angular.x.toFixed(2));\n    setLastValidCmdRoll(x.angular.x.toFixed(2));\n    setCmdPitch(x.angular.y.toFixed(2));\n    setLastValidCmdPitch(x.angular.y.toFixed(2));\n    setCmdYaw(x.angular.z.toFixed(2));\n    setLastValidCmdYaw(x.angular.z.toFixed(2));\n  }, []);\n  useROSTopicSubscriber(positionTargetFeedBackCallback, \"/proc_control/current_target\", \"geometry_msgs/Pose\");\n  useROSTopicSubscriber(velocityTargetFeedBackCallback, \"/proc_control/current_target_velocity\", \"geometry_msgs/Twist\");\n  return /*#__PURE__*/_jsxDEV(GeneralContext.Consumer, {\n    children: context => context && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '100%',\n        flexDirection: 'row',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: '20px',\n          textAlign: 'center'\n        },\n        children: \"Waypoints\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          width: '150px',\n          marginBottom: '10px',\n          fontSize: '10px',\n          alignSelf: 'center'\n        },\n        handler: handleClearWayPoint,\n        label: \"Clear Waypoint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginLeft: '10px',\n          marginBottom: '10px',\n          width: '150px',\n          fontSize: '10px',\n          alignSelf: 'center'\n        },\n        handler: handleSetInitialPosition,\n        label: \"Set initial position\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginLeft: '10px',\n          marginBottom: '10px',\n          width: '150px',\n          fontSize: '10px',\n          alignSelf: 'center'\n        },\n        handler: handleSetDepthOffset,\n        label: \"Set depth offset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        onLabel: \"Velocity\",\n        offLabel: \"Position\",\n        vertical: false,\n        value: !context.isWayPointVelocityMode,\n        handler: HandleChangeSwitch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '10px 10px',\n          border: '1px solid lightgray',\n          width: '150px',\n          float: 'left'\n        },\n        children: [\"Command\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 128\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: cmdX,\n          handlerChange: handleCmdXChange,\n          handlerKeyDown: handleCmdKeyDown,\n          id: \"waypoint_cmdx_id\",\n          label: \"X\",\n          style: {\n            padding: '10px 10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 183\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: cmdY,\n          handlerChange: handleCmdYChange,\n          handlerKeyDown: handleCmdKeyDown,\n          id: \"waypoint_cmdy_id\",\n          label: \"Y\",\n          style: {\n            padding: '10px 10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 183\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: cmdZ,\n          handlerChange: handleCmdZChange,\n          handlerKeyDown: handleCmdKeyDown,\n          id: \"waypoint_cmdz_id\",\n          label: \"Z\",\n          style: {\n            padding: '10px 10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '10px 10px',\n          border: '1px solid lightgray',\n          width: '150px',\n          float: 'right'\n        },\n        children: [\"Command\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 129\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: cmdRoll,\n          handlerChange: handleCmdRollChange,\n          handlerKeyDown: handleCmdKeyDown,\n          id: \"waypoint_cmdroll_id\",\n          label: \"Roll\",\n          style: {\n            padding: '10px 10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 195\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: cmdPitch,\n          handlerChange: handleCmdPitchChange,\n          handlerKeyDown: handleCmdKeyDown,\n          id: \"waypoint_cmdpitch_id\",\n          label: \"Pitch\",\n          style: {\n            padding: '10px 10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 199\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: cmdYaw,\n          handlerChange: handleCmdYawChange,\n          handlerKeyDown: handleCmdKeyDown,\n          id: \"waypoint_cmdyaw_id\",\n          label: \"Yaw\",\n          style: {\n            padding: '10px 10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 337,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Waypoints, \"ImbF9nSf5ClKEyrylmXeS3yb3Fc=\", false, function () {\n  return [useROSService, useROSService, useROSService, useROSService, useROSService, useROSTopicSubscriber, useROSTopicSubscriber, useROSTopicSubscriber];\n});\n\n_c = Waypoints;\nexport default Waypoints;\n\nvar _c;\n\n$RefreshReg$(_c, \"Waypoints\");","map":{"version":3,"sources":["/home/alexemdesgagne/octopus-telemetry/src/src/components/Waypoints.tsx"],"names":["useCallback","useContext","useState","Switch","GeneralContext","Button","TextField","useROSService","ServiceRequestFactory","useROSTopicSubscriber","Waypoints","context","controlModeServiceCallback","x","HandleChangeSwitch","setIsWayPointVelocityMode","isWayPointVelocityMode","mode","request","controlModeServiceCall","clearWaypointServiceCallback","handleClearWayPoint","clearWayPointServiceCall","setInitialPositionServiceCallback","handleSetInitialPosition","setInitialPositionServiceCall","setTimeout","setDepthOffsetServiceCallback","handleSetDepthOffset","value","setDepthOffsetServiceCall","checkSyntax","v","every","c","includes","cmdX","setCmdX","lastValidCmdX","setLastValidCmdX","cmdY","setCmdY","lastValidCmdY","setLastValidCmdY","cmdZ","setCmdZ","lastValidCmdZ","setLastValidCmdZ","cmdRoll","setCmdRoll","lastValidCmdRoll","setLastValidCmdRoll","cmdPitch","setCmdPitch","lastValidCmdPitch","setLastValidCmdPitch","cmdYaw","setCmdYaw","lastValidCmdYaw","setLastValidCmdYaw","handleCmdXChange","e","target","handleCmdYChange","handleCmdZChange","handleCmdRollChange","handleCmdPitchChange","handleCmdYawChange","sendPositionTargetServiceCallback","sendPositionTargetServiceCall","handleCmdKeyDown","key","parseFloat","finalX","isNaN","y","finalY","z","finalZ","roll","finalRoll","pitch","finalPitch","yaw","finalYaw","X","Y","Z","ROLL","PICH","YAW","controlModeCallback","data","positionTargetFeedBackCallback","position","toFixed","orientation","velocityTargetFeedBackCallback","linear","angular","width","height","flexDirection","textAlign","fontSize","marginBottom","alignSelf","marginLeft","padding","border","float"],"mappings":"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","sourcesContent":["import { useCallback, useContext, useState } from 'react';\n\nimport Switch from './common/switch/Switch';\nimport { GeneralContext } from \"../context/generalContext\";\nimport Button from './common/button/Button';\nimport TextField from './common/textfield/Textfield';\n\nimport { useROSService, ServiceRequestFactory } from '../hooks/useROSService'\nimport { useROSTopicSubscriber } from \"../hooks/useROSTopicSubscriber\";\n\nconst Waypoints = () => {\n\n    const context = useContext(GeneralContext)\n\n    //////////////////////////////////////\n    // CONTROL MODE\n    //////////////////////////////////////\n\n    // Service response\n    const controlModeServiceCallback = useCallback(\n        (x: any) => {\n        }, []\n    )\n\n    const HandleChangeSwitch = () => {\n\n        context.setIsWayPointVelocityMode(!context.isWayPointVelocityMode)\n        var mode\n        if (!context.isWayPointVelocityMode)\n            mode = 0\n        if (context.isWayPointVelocityMode)\n            mode = 2\n\n        var request = ServiceRequestFactory({\n            mode: mode,\n        });\n        controlModeServiceCall(request)\n    }\n\n    const controlModeServiceCall = useROSService<any>(controlModeServiceCallback, \"/proc_control/set_control_mode\", \"sonia_common/SetControlMode\")\n\n    //////////////////////////////////////\n    // CLEAR WAYPOINT\n    //////////////////////////////////////\n\n    // Service response\n    const clearWaypointServiceCallback = useCallback(\n        (x: any) => {\n        }, []\n    )\n\n    const handleClearWayPoint = () => {\n\n        var request = ServiceRequestFactory({\n        });\n        clearWayPointServiceCall(request)\n    }\n\n    const clearWayPointServiceCall = useROSService<any>(clearWaypointServiceCallback, \"/proc_control/clear_waypoint\", \"sonia_common/ClearWaypoint\")\n\n    //////////////////////////////////////\n    // SET INITIAL POSITION\n    //////////////////////////////////////\n\n    // Service response\n    const setInitialPositionServiceCallback = useCallback(\n        (x: any) => {\n        }, []\n    )\n\n    const handleSetInitialPosition = () => {\n\n        var request = ServiceRequestFactory({\n        });\n        setInitialPositionServiceCall(request)\n\n        // Send clear waypoint with 500 ms delay\n        setTimeout(handleClearWayPoint, 500)\n\n    }\n\n    const setInitialPositionServiceCall = useROSService<any>(setInitialPositionServiceCallback, \"/proc_navigation/set_world_x_y_offset\", \"sonia_common/SetWorldXYOffset\")\n\n    //////////////////////////////////////\n    // SET DEPTH OFFSET\n    //////////////////////////////////////\n\n    // Service response\n    const setDepthOffsetServiceCallback = useCallback(\n        (x: any) => {\n        }, []\n    )\n\n    const handleSetDepthOffset = (value: any) => {\n\n        var request = ServiceRequestFactory({\n        });\n        setDepthOffsetServiceCall(request)\n\n    }\n\n    const setDepthOffsetServiceCall = useROSService<any>(setDepthOffsetServiceCallback, \"/proc_navigation/set_depth_offset\", \"sonia_common/SetDepthOffset\")\n    const checkSyntax = (v: any) => [...v].every(c => '0123456789.-'.includes(c));\n\n    const [cmdX, setCmdX] = useState('0.00');\n    const [lastValidCmdX, setLastValidCmdX] = useState('0.00');\n    const [cmdY, setCmdY] = useState('0.00');\n    const [lastValidCmdY, setLastValidCmdY] = useState('0.00');\n    const [cmdZ, setCmdZ] = useState('0.00');\n    const [lastValidCmdZ, setLastValidCmdZ] = useState('0.00');\n    const [cmdRoll, setCmdRoll] = useState('0.00');\n    const [lastValidCmdRoll, setLastValidCmdRoll] = useState('0.00');\n    const [cmdPitch, setCmdPitch] = useState('0.00');\n    const [lastValidCmdPitch, setLastValidCmdPitch] = useState('0.00');\n    const [cmdYaw, setCmdYaw] = useState('0.00');\n    const [lastValidCmdYaw, setLastValidCmdYaw] = useState('0.00');\n\n    const handleCmdXChange = (e: any) => {\n        if (checkSyntax(e.target.value)) {\n            setCmdX(e.target.value)\n        }\n    }\n\n    const handleCmdYChange = (e: any) => {\n        if (checkSyntax(e.target.value)) {\n            setCmdY(e.target.value)\n        }\n    }\n\n    const handleCmdZChange = (e: any) => {\n        if (checkSyntax(e.target.value)) {\n            setCmdZ(e.target.value)\n        }\n    }\n\n    const handleCmdRollChange = (e: any) => {\n        if (checkSyntax(e.target.value)) {\n            setCmdRoll(e.target.value)\n        }\n    }\n\n    const handleCmdPitchChange = (e: any) => {\n        if (checkSyntax(e.target.value)) {\n            setCmdPitch(e.target.value)\n        }\n    }\n\n    const handleCmdYawChange = (e: any) => {\n        if (checkSyntax(e.target.value)) {\n            setCmdYaw(e.target.value)\n        }\n    }\n\n    //////////////////////////////////////\n    // SEND TARGET POSITIONS\n    //////////////////////////////////////\n\n    // Service response\n    const sendPositionTargetServiceCallback = useCallback(\n        (x: any) => {\n        }, []\n    )\n\n    const sendPositionTargetServiceCall = useROSService<any>(sendPositionTargetServiceCallback, \"/proc_control/set_global_target\", \"sonia_common/SetPositionTarget\")\n\n    const handleCmdKeyDown = (e: any) => {\n\n        if (e.key === 'Enter') {\n\n            // Handle command X axis\n            var x = parseFloat(cmdX)\n            var finalX\n            if (!isNaN(x)) {\n                //Input is valid\n                setLastValidCmdX(cmdX)\n                finalX = cmdX\n            } else {\n                //Use last valid value instead\n                finalX = parseFloat(lastValidCmdX)\n            }\n\n            // Handle command Y axis\n            var y = parseFloat(cmdY)\n            var finalY\n            if (!isNaN(y)) {\n                //Input is valid\n                setLastValidCmdY(cmdY)\n                finalY = cmdY\n            } else {\n                //Use last valid value instead\n                finalY = parseFloat(lastValidCmdY)\n            }\n\n            // Handle command Z axis\n            var z = parseFloat(cmdZ)\n            var finalZ\n            if (!isNaN(z)) {\n                //Input is valid\n                setLastValidCmdZ(cmdZ)\n                finalZ = cmdZ\n            } else {\n                //Use last valid value instead\n                finalZ = parseFloat(lastValidCmdZ)\n            }\n\n            // Handle command Roll axis\n            var roll = parseFloat(cmdRoll)\n            var finalRoll\n            if (!isNaN(roll)) {\n                //Input is valid\n                setLastValidCmdRoll(cmdRoll)\n                finalRoll = cmdRoll\n            } else {\n                //Use last valid value instead\n                finalRoll = parseFloat(lastValidCmdRoll)\n            }\n\n            // Handle command Pitch axis\n            var pitch = parseFloat(cmdPitch)\n            var finalPitch\n            if (!isNaN(pitch)) {\n                //Input is valid\n                setLastValidCmdPitch(cmdPitch)\n                finalPitch = cmdPitch\n            } else {\n                //Use last valid value instead\n                finalPitch = parseFloat(lastValidCmdPitch)\n            }\n\n            // Handle command Yaw axis\n            var yaw = parseFloat(cmdYaw)\n            var finalYaw\n            if (!isNaN(yaw)) {\n                //Input is valid\n                setLastValidCmdYaw(cmdYaw)\n                finalYaw = cmdYaw\n            } else {\n                //Use last valid value instead\n                finalYaw = parseFloat(lastValidCmdYaw)\n            }\n\n            //Depth is limited to 3\n            if (finalZ > 3) {\n                finalZ = 3\n                setLastValidCmdZ('3.0')\n                setCmdZ('3.0')\n            }\n\n            var request = ServiceRequestFactory({\n                X: finalX,\n                Y: finalY,\n                Z: finalZ,\n                ROLL: finalRoll,\n                PICH: finalPitch,\n                YAW: finalYaw\n            });\n            sendPositionTargetServiceCall(request)\n\n        }\n    }\n\n    /////////////////////////////////////\n    // CONTROL MODE FEEDBACK\n    /////////////////////////////////////\n\n    const controlModeCallback = useCallback(\n\n        (x: any) => {\n\n            if (x.data === 0)\n                context.setIsWayPointVelocityMode(false)\n\n            if (x.data === 2)\n                context.setIsWayPointVelocityMode(true)\n\n        }, []\n    )\n\n    useROSTopicSubscriber<any>(controlModeCallback, \"/proc_control/control_mode\", \"std_msgs/UInt8\")\n\n    /////////////////////////////////////\n    // POSITION TARGET FEEDBACK\n    /////////////////////////////////////\n\n    const positionTargetFeedBackCallback = useCallback(\n        (x: any) => {\n\n            setCmdX(x.position.x.toFixed(2))\n            setLastValidCmdX(x.position.x.toFixed(2))\n\n            setCmdY(x.position.y.toFixed(2))\n            setLastValidCmdY(x.position.y.toFixed(2))\n\n            setCmdZ(x.position.z.toFixed(2))\n            setLastValidCmdZ(x.position.z.toFixed(2))\n\n            setCmdRoll(x.orientation.x.toFixed(2))\n            setLastValidCmdRoll(x.orientation.x.toFixed(2))\n\n            setCmdPitch(x.orientation.y.toFixed(2))\n            setLastValidCmdPitch(x.orientation.y.toFixed(2))\n\n            setCmdYaw(x.orientation.z.toFixed(2))\n            setLastValidCmdYaw(x.orientation.z.toFixed(2))\n\n        }, []\n    )\n\n    const velocityTargetFeedBackCallback = useCallback(\n        (x: any) => {\n\n            setCmdX(x.linear.x.toFixed(2))\n            setLastValidCmdX(x.linear.x.toFixed(2))\n\n            setCmdY(x.linear.y.toFixed(2))\n            setLastValidCmdY(x.linear.y.toFixed(2))\n\n            setCmdZ(x.linear.z.toFixed(2))\n            setLastValidCmdZ(x.linear.z.toFixed(2))\n\n            setCmdRoll(x.angular.x.toFixed(2))\n            setLastValidCmdRoll(x.angular.x.toFixed(2))\n\n            setCmdPitch(x.angular.y.toFixed(2))\n            setLastValidCmdPitch(x.angular.y.toFixed(2))\n\n            setCmdYaw(x.angular.z.toFixed(2))\n            setLastValidCmdYaw(x.angular.z.toFixed(2))\n\n        }, []\n    )\n\n    useROSTopicSubscriber<any>(positionTargetFeedBackCallback, \"/proc_control/current_target\", \"geometry_msgs/Pose\")\n    useROSTopicSubscriber<any>(velocityTargetFeedBackCallback, \"/proc_control/current_target_velocity\", \"geometry_msgs/Twist\")\n\n    return (\n        <GeneralContext.Consumer>\n            {context => context && (\n                <div style={{ width: '100%', height: '100%', flexDirection: 'row', textAlign: 'center' }}>\n                    <h1 style={{ fontSize: '20px', textAlign: 'center' }}>Waypoints</h1>\n                    <Button style={{ width: '150px', marginBottom: '10px', fontSize: '10px', alignSelf: 'center' }} handler={handleClearWayPoint} label=\"Clear Waypoint\" />\n                    <Button style={{ marginLeft: '10px', marginBottom: '10px', width: '150px', fontSize: '10px', alignSelf: 'center' }} handler={handleSetInitialPosition} label=\"Set initial position\" />\n                    <Button style={{ marginLeft: '10px', marginBottom: '10px', width: '150px', fontSize: '10px', alignSelf: 'center' }} handler={handleSetDepthOffset} label=\"Set depth offset\" />\n                    <Switch onLabel=\"Velocity\"\n                        offLabel=\"Position\"\n                        vertical={false}\n                        value={!context.isWayPointVelocityMode}\n                        handler={HandleChangeSwitch} />\n                    <div style={{ padding: '10px 10px', border: '1px solid lightgray', width: '150px', float: 'left' }}>Command<br></br>\n                        <TextField value={cmdX} handlerChange={handleCmdXChange} handlerKeyDown={handleCmdKeyDown} id=\"waypoint_cmdx_id\" label=\"X\" style={{ padding: '10px 10px' }} /><br></br>\n                        <TextField value={cmdY} handlerChange={handleCmdYChange} handlerKeyDown={handleCmdKeyDown} id=\"waypoint_cmdy_id\" label=\"Y\" style={{ padding: '10px 10px' }} /><br></br>\n                        <TextField value={cmdZ} handlerChange={handleCmdZChange} handlerKeyDown={handleCmdKeyDown} id=\"waypoint_cmdz_id\" label=\"Z\" style={{ padding: '10px 10px' }} />\n                    </div>\n                    <div style={{ padding: '10px 10px', border: '1px solid lightgray', width: '150px', float: 'right' }}>Command<br></br>\n                        <TextField value={cmdRoll} handlerChange={handleCmdRollChange} handlerKeyDown={handleCmdKeyDown} id=\"waypoint_cmdroll_id\" label=\"Roll\" style={{ padding: '10px 10px' }} /><br></br>\n                        <TextField value={cmdPitch} handlerChange={handleCmdPitchChange} handlerKeyDown={handleCmdKeyDown} id=\"waypoint_cmdpitch_id\" label=\"Pitch\" style={{ padding: '10px 10px' }} /><br></br>\n                        <TextField value={cmdYaw} handlerChange={handleCmdYawChange} handlerKeyDown={handleCmdKeyDown} id=\"waypoint_cmdyaw_id\" label=\"Yaw\" style={{ padding: '10px 10px' }} />\n                    </div>\n                </div>\n            )}\n        </GeneralContext.Consumer>\n    );\n};\n\nexport default Waypoints;\n"]},"metadata":{},"sourceType":"module"}