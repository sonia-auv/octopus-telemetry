{"ast":null,"code":"var _jsxFileName = \"/home/alexemdesgagne/octopus-telemetry/src/src/components/Pfd.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useCallback } from 'react';\nimport * as AttitudeIndicatorModule from './PFD/guages/attitude_indicator';\nimport * as AltimeterTickerModule from './PFD/guages/altimeter_ticker';\nimport * as AltimeterTapeModule from './PFD/guages/altimeter_tape';\nimport * as AirspeedTickerModule from './PFD/guages/airspeed_ticker';\nimport * as AirspeedTapeModule from './PFD/guages/airspeed_tape';\nimport * as VerticalSpeedIndicatorModule from './PFD/guages/vertical_speed';\nimport * as HorizontalSituationIndicatorModule from './PFD/guages/horizontal_situation';\nimport * as BottomLeftPanelModule from './PFD/guages/bottomleftpanel';\nimport * as BottomRightPanelModule from './PFD/guages/bottomrightpanel';\nimport { useROSTopicSubscriber } from \"../hooks/useROSTopicSubscriber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar attitudeIndicator;\nvar altimeterTicker;\nvar altimeterTape;\nvar airspeedTicker;\nvar airspeedTape;\nvar verticalSpeedIndicator;\nvar horizontalSituationIndicator;\nvar bottomLeftPanel;\nvar bottomRightPanel;\nvar data = {\n  \"pitchAngle\": 0,\n  \"bankAngle\": 0,\n  \"turnCoordinationAngle\": 0,\n  \"altitude\": 0,\n  \"altitudeBug\": 0,\n  \"verticalSpeed\": 0,\n  \"verticalSpeedBug\": 0,\n  \"airspeed\": 0,\n  \"airspeedBug\": 0,\n  \"heading\": 0,\n  \"trueCourse\": 0,\n  \"headingBug\": 0,\n  \"velY\": 0,\n  \"posX\": 0,\n  \"posY\": 0,\n  \"velRoll\": 0,\n  \"velPitch\": 0,\n  \"velYaw\": 0\n};\n\nconst ActuatorModule = () => {\n  _s();\n\n  const draw = () => {\n    attitudeIndicator.draw();\n    altimeterTape.draw();\n    altimeterTicker.draw();\n    airspeedTape.draw();\n    airspeedTicker.draw();\n    verticalSpeedIndicator.draw();\n    horizontalSituationIndicator.draw();\n    bottomLeftPanel.draw();\n    bottomRightPanel.draw();\n  };\n\n  useEffect(() => {\n    var cvs = document.getElementById(\"pfdcanvas\");\n    var ctx = cvs.getContext(\"2d\");\n\n    if (ctx) {\n      ctx.fillStyle = \"#000\";\n      ctx.fillRect(0, 0, cvs.width, cvs.height);\n      attitudeIndicator = AttitudeIndicatorModule.AttitudeIndicator(ctx, {\n        \"width\": 400,\n        \"height\": 325,\n        \"x\": 223,\n        \"y\": 60\n      }, 5, data);\n      altimeterTicker = AltimeterTickerModule.AltimeterTicker(ctx, {\n        \"width\": 160,\n        \"height\": 85,\n        \"x\": 650,\n        \"y\": 200\n      }, data);\n      altimeterTape = AltimeterTapeModule.AltimeterTape(ctx, {\n        \"width\": 100,\n        \"height\": 400,\n        \"x\": altimeterTicker.loc.x + 163,\n        \"y\": altimeterTicker.loc.y + altimeterTicker.loc.height / 2 - 200\n      }, data);\n      airspeedTicker = AirspeedTickerModule.AirspeedTicker(ctx, {\n        \"width\": 80,\n        \"height\": 85,\n        \"x\": 100,\n        \"y\": 200\n      }, data);\n      airspeedTape = AirspeedTapeModule.AirspeedTape(ctx, {\n        \"width\": 75,\n        \"height\": 400,\n        \"x\": airspeedTicker.loc.x - 78,\n        \"y\": airspeedTicker.loc.y + airspeedTicker.loc.height / 2 - 200\n      }, data);\n      verticalSpeedIndicator = VerticalSpeedIndicatorModule.VerticalSpeedIndicator(ctx, {\n        \"width\": 120,\n        \"height\": 400,\n        \"x\": 920,\n        \"y\": altimeterTape.loc.y + altimeterTape.loc.height / 2 - 200\n      }, 33, data);\n      horizontalSituationIndicator = HorizontalSituationIndicatorModule.HorizontalSituationIndicator(ctx, {\n        \"width\": 620,\n        \"height\": 280,\n        \"x\": 115,\n        \"y\": 390\n      }, 40, data);\n      bottomLeftPanel = BottomLeftPanelModule.BottomLeftPanel(ctx, {\n        \"width\": 160,\n        \"height\": 125,\n        \"x\": 25,\n        \"y\": 485\n      }, data);\n      bottomRightPanel = BottomRightPanelModule.BottomRightPanel(ctx, {\n        \"width\": 180,\n        \"height\": 160,\n        \"x\": 815,\n        \"y\": 490\n      }, data);\n    }\n\n    draw();\n  }, []);\n  const odomCallback = useCallback(x => {\n    data.posX = x.pose.pose.position.x.toFixed(2);\n    data.posY = x.pose.pose.position.y.toFixed(2);\n    data.altitude = x.pose.pose.position.z.toFixed(2);\n    data.bankAngle = x.pose.pose.orientation.x.toFixed(2);\n    data.pitchAngle = x.pose.pose.orientation.y.toFixed(2);\n    data.heading = x.pose.pose.orientation.z.toFixed(2);\n    data.airspeed = x.twist.twist.linear.x.toFixed(2);\n    data.velY = x.twist.twist.linear.y.toFixed(2);\n    data.verticalSpeed = x.twist.twist.linear.z.toFixed(2);\n    data.velRoll = x.twist.twist.angular.x.toFixed(2);\n    data.velPitch = x.twist.twist.angular.y.toFixed(2);\n    data.velYaw = x.twist.twist.angular.z.toFixed(2);\n    draw();\n  }, []);\n  const targetCallback = useCallback(x => {\n    data.altitudeBug = x.position.z.toFixed(2);\n    data.headingBug = x.orientation.z.toFixed(2);\n    draw();\n  }, []);\n  const targetVelocityCallback = useCallback(x => {\n    data.verticalSpeedBug = x.linear.z.toFixed(2);\n    data.airspeedBug = x.linear.x.toFixed(2);\n    draw();\n  }, []);\n  useROSTopicSubscriber(odomCallback, \"/proc_navigation/odom\", \"nav_msgs/Odometry\");\n  useROSTopicSubscriber(targetCallback, \"/proc_control/current_target\", \"geometry_msgs/Pose\");\n  useROSTopicSubscriber(targetVelocityCallback, \"/proc_control/current_target_velocity\", \"geometry_msgs/Twist\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%',\n      flexDirection: 'row',\n      textAlign: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"pfdcanvas\",\n      width: \"1050\",\n      height: \"680\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ActuatorModule, \"zrtP+ef3lVeR/UH/NOQ+qy66U+0=\", false, function () {\n  return [useROSTopicSubscriber, useROSTopicSubscriber, useROSTopicSubscriber];\n});\n\n_c = ActuatorModule;\nexport default ActuatorModule;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActuatorModule\");","map":{"version":3,"sources":["/home/alexemdesgagne/octopus-telemetry/src/src/components/Pfd.tsx"],"names":["useEffect","useCallback","AttitudeIndicatorModule","AltimeterTickerModule","AltimeterTapeModule","AirspeedTickerModule","AirspeedTapeModule","VerticalSpeedIndicatorModule","HorizontalSituationIndicatorModule","BottomLeftPanelModule","BottomRightPanelModule","useROSTopicSubscriber","attitudeIndicator","altimeterTicker","altimeterTape","airspeedTicker","airspeedTape","verticalSpeedIndicator","horizontalSituationIndicator","bottomLeftPanel","bottomRightPanel","data","ActuatorModule","draw","cvs","document","getElementById","ctx","getContext","fillStyle","fillRect","width","height","AttitudeIndicator","AltimeterTicker","AltimeterTape","loc","x","y","AirspeedTicker","AirspeedTape","VerticalSpeedIndicator","HorizontalSituationIndicator","BottomLeftPanel","BottomRightPanel","odomCallback","posX","pose","position","toFixed","posY","altitude","z","bankAngle","orientation","pitchAngle","heading","airspeed","twist","linear","velY","verticalSpeed","velRoll","angular","velPitch","velYaw","targetCallback","altitudeBug","headingBug","targetVelocityCallback","verticalSpeedBug","airspeedBug","flexDirection","textAlign"],"mappings":"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","sourcesContent":["import { useEffect, useCallback } from 'react';\n\nimport * as AttitudeIndicatorModule from './PFD/guages/attitude_indicator'\nimport * as AltimeterTickerModule from './PFD/guages/altimeter_ticker'\nimport * as AltimeterTapeModule from './PFD/guages/altimeter_tape'\nimport * as AirspeedTickerModule from './PFD/guages/airspeed_ticker'\nimport * as AirspeedTapeModule from './PFD/guages/airspeed_tape'\nimport * as VerticalSpeedIndicatorModule from './PFD/guages/vertical_speed'\nimport * as HorizontalSituationIndicatorModule from './PFD/guages/horizontal_situation'\nimport * as BottomLeftPanelModule from './PFD/guages/bottomleftpanel'\nimport * as BottomRightPanelModule from './PFD/guages/bottomrightpanel'\n\nimport { useROSTopicSubscriber } from \"../hooks/useROSTopicSubscriber\";\n\nvar attitudeIndicator: AttitudeIndicatorModule.AttitudeIndicator;\nvar altimeterTicker: AltimeterTickerModule.AltimeterTicker;\nvar altimeterTape: AltimeterTapeModule.AltimeterTape;\nvar airspeedTicker: AirspeedTickerModule.AirspeedTicker;\nvar airspeedTape: AirspeedTapeModule.AirspeedTape;\nvar verticalSpeedIndicator: VerticalSpeedIndicatorModule.VerticalSpeedIndicator\nvar horizontalSituationIndicator: HorizontalSituationIndicatorModule.HorizontalSituationIndicator;\nvar bottomLeftPanel: BottomLeftPanelModule.BottomLeftPanel;\nvar bottomRightPanel: BottomRightPanelModule.BottomRightPanel;\n\nvar data = {\n    \"pitchAngle\": 0,\n    \"bankAngle\": 0,\n    \"turnCoordinationAngle\": 0,\n    \"altitude\": 0,\n    \"altitudeBug\": 0,\n    \"verticalSpeed\": 0,\n    \"verticalSpeedBug\": 0,\n    \"airspeed\": 0,\n    \"airspeedBug\": 0,\n    \"heading\": 0,\n    \"trueCourse\": 0,\n    \"headingBug\": 0,\n    \"velY\": 0,\n    \"posX\": 0,\n    \"posY\": 0,\n    \"velRoll\": 0,\n    \"velPitch\": 0,\n    \"velYaw\": 0,\n}\n\nconst ActuatorModule = () => {\n\n    const draw = () => {\n\n        attitudeIndicator.draw();\n        altimeterTape.draw();\n        altimeterTicker.draw();\n        airspeedTape.draw();\n        airspeedTicker.draw();\n        verticalSpeedIndicator.draw();\n        horizontalSituationIndicator.draw();\n        bottomLeftPanel.draw();\n        bottomRightPanel.draw();\n    }\n\n    useEffect(() => {\n\n        var cvs = document.getElementById(\"pfdcanvas\") as HTMLCanvasElement;\n        var ctx = cvs.getContext(\"2d\");\n\n        if (ctx) {\n\n            ctx.fillStyle = \"#000\";\n            ctx.fillRect(0, 0, cvs.width, cvs.height);\n\n            attitudeIndicator = AttitudeIndicatorModule.AttitudeIndicator(ctx, \n                {\n                \"width\": 400,\n                \"height\": 325,\n                \"x\": 223,\n                \"y\": 60\n            }, 5, data)\n\n            altimeterTicker = AltimeterTickerModule.AltimeterTicker(ctx, \n                {\n                \"width\": 160,\n                \"height\": 85,\n                \"x\": 650,\n                \"y\": 200\n            }, data)\n\n            altimeterTape = AltimeterTapeModule.AltimeterTape(ctx, \n                {\n                \"width\": 100,\n                \"height\": 400,\n                \"x\": altimeterTicker.loc.x + 163,\n                \"y\": altimeterTicker.loc.y + altimeterTicker.loc.height / 2 - 200\n            }, data)\n\n            airspeedTicker = AirspeedTickerModule.AirspeedTicker(ctx, \n                {\n                \"width\": 80,\n                \"height\": 85,\n                \"x\": 100,\n                \"y\": 200\n            }, data)\n\n            airspeedTape = AirspeedTapeModule.AirspeedTape(ctx, \n                {\n                \"width\": 75,\n                \"height\": 400,\n                \"x\": airspeedTicker.loc.x - 78,\n                \"y\": airspeedTicker.loc.y + airspeedTicker.loc.height / 2 - 200\n            }, data)\n\n            verticalSpeedIndicator = VerticalSpeedIndicatorModule.VerticalSpeedIndicator(ctx, \n                {\n                \"width\": 120,\n                \"height\": 400,\n                \"x\": 920,\n                \"y\": altimeterTape.loc.y + altimeterTape.loc.height / 2 - 200\n            }, 33, data)\n\n            horizontalSituationIndicator = HorizontalSituationIndicatorModule.HorizontalSituationIndicator(ctx, \n                {\n                \"width\": 620,\n                \"height\": 280,\n                \"x\": 115,\n                \"y\": 390\n            }, 40, data)\n\n            bottomLeftPanel = BottomLeftPanelModule.BottomLeftPanel(ctx, \n                {\n                \"width\": 160,\n                \"height\": 125,\n                \"x\": 25,\n                \"y\": 485\n            }, data)\n\n            bottomRightPanel = BottomRightPanelModule.BottomRightPanel(ctx, \n                {\n                \"width\": 180,\n                \"height\": 160,\n                \"x\": 815,\n                \"y\": 490\n            }, data)\n\n        }\n\n        draw();\n\n    }, []);\n\n    const odomCallback = useCallback(\n        (x: any) => {\n            data.posX = x.pose.pose.position.x.toFixed(2)\n            data.posY = x.pose.pose.position.y.toFixed(2)\n            data.altitude = x.pose.pose.position.z.toFixed(2)\n            data.bankAngle = x.pose.pose.orientation.x.toFixed(2)\n            data.pitchAngle = x.pose.pose.orientation.y.toFixed(2)\n            data.heading = x.pose.pose.orientation.z.toFixed(2)\n            data.airspeed = x.twist.twist.linear.x.toFixed(2)\n            data.velY = x.twist.twist.linear.y.toFixed(2)\n            data.verticalSpeed = x.twist.twist.linear.z.toFixed(2)\n            data.velRoll = x.twist.twist.angular.x.toFixed(2)\n            data.velPitch = x.twist.twist.angular.y.toFixed(2)\n            data.velYaw = x.twist.twist.angular.z.toFixed(2)\n            draw();\n        },\n        []\n    )\n\n    const targetCallback = useCallback(\n        (x: any) => {\n            data.altitudeBug = x.position.z.toFixed(2)\n            data.headingBug = x.orientation.z.toFixed(2)\n            draw();\n        },\n        []\n    )\n\n    const targetVelocityCallback = useCallback(\n        (x: any) => {\n            data.verticalSpeedBug = x.linear.z.toFixed(2)\n            data.airspeedBug = x.linear.x.toFixed(2)\n            draw();\n        },\n        []\n    )\n\n    useROSTopicSubscriber<any>(odomCallback, \"/proc_navigation/odom\", \"nav_msgs/Odometry\")\n    useROSTopicSubscriber<any>(targetCallback, \"/proc_control/current_target\", \"geometry_msgs/Pose\")\n    useROSTopicSubscriber<any>(targetVelocityCallback, \"/proc_control/current_target_velocity\", \"geometry_msgs/Twist\")\n\n    return (\n        <div style={{ width: '100%', height: '100%', flexDirection: 'row', textAlign: 'center' }}>\n            <canvas id=\"pfdcanvas\" width=\"1050\" height=\"680\"></canvas>\n        </div>\n    );\n};\n\nexport default ActuatorModule;\n"]},"metadata":{},"sourceType":"module"}