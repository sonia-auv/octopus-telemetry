{"ast":null,"code":"/*!\r\n * EventEmitter2\r\n * https://github.com/hij1nx/EventEmitter2\r\n *\r\n * Copyright (c) 2013 hij1nx\r\n * Licensed under the MIT license.\r\n */\n;\n!function (undefined) {\n  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n  };\n  var defaultMaxListeners = 10;\n\n  function init() {\n    this._events = {};\n\n    if (this._conf) {\n      configure.call(this, this._conf);\n    }\n  }\n\n  function configure(conf) {\n    if (conf) {\n      this._conf = conf;\n      conf.delimiter && (this.delimiter = conf.delimiter);\n      this._maxListeners = conf.maxListeners !== undefined ? conf.maxListeners : defaultMaxListeners;\n      conf.wildcard && (this.wildcard = conf.wildcard);\n      conf.newListener && (this.newListener = conf.newListener);\n      conf.verboseMemoryLeak && (this.verboseMemoryLeak = conf.verboseMemoryLeak);\n\n      if (this.wildcard) {\n        this.listenerTree = {};\n      }\n    } else {\n      this._maxListeners = defaultMaxListeners;\n    }\n  }\n\n  function logPossibleMemoryLeak(count, eventName) {\n    var errorMsg = '(node) warning: possible EventEmitter memory ' + 'leak detected. ' + count + ' listeners added. ' + 'Use emitter.setMaxListeners() to increase limit.';\n\n    if (this.verboseMemoryLeak) {\n      errorMsg += ' Event name: ' + eventName + '.';\n    }\n\n    if (typeof process !== 'undefined' && process.emitWarning) {\n      var e = new Error(errorMsg);\n      e.name = 'MaxListenersExceededWarning';\n      e.emitter = this;\n      e.count = count;\n      process.emitWarning(e);\n    } else {\n      console.error(errorMsg);\n\n      if (console.trace) {\n        console.trace();\n      }\n    }\n  }\n\n  function EventEmitter(conf) {\n    this._events = {};\n    this.newListener = false;\n    this.verboseMemoryLeak = false;\n    configure.call(this, conf);\n  }\n\n  EventEmitter.EventEmitter2 = EventEmitter; // backwards compatibility for exporting EventEmitter property\n  //\n  // Attention, function return type now is array, always !\n  // It has zero elements if no any matches found and one or more\n  // elements (leafs) if there are matches\n  //\n\n  function searchListenerTree(handlers, type, tree, i) {\n    if (!tree) {\n      return [];\n    }\n\n    var listeners = [],\n        leaf,\n        len,\n        branch,\n        xTree,\n        xxTree,\n        isolatedBranch,\n        endReached,\n        typeLength = type.length,\n        currentType = type[i],\n        nextType = type[i + 1];\n\n    if (i === typeLength && tree._listeners) {\n      //\n      // If at the end of the event(s) list and the tree has listeners\n      // invoke those listeners.\n      //\n      if (typeof tree._listeners === 'function') {\n        handlers && handlers.push(tree._listeners);\n        return [tree];\n      } else {\n        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n          handlers && handlers.push(tree._listeners[leaf]);\n        }\n\n        return [tree];\n      }\n    }\n\n    if (currentType === '*' || currentType === '**' || tree[currentType]) {\n      //\n      // If the event emitted is '*' at this part\n      // or there is a concrete match at this patch\n      //\n      if (currentType === '*') {\n        for (branch in tree) {\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n          }\n        }\n\n        return listeners;\n      } else if (currentType === '**') {\n        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === '*';\n\n        if (endReached && tree._listeners) {\n          // The next element has a _listeners, add it to the handlers.\n          listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n        }\n\n        for (branch in tree) {\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n            if (branch === '*' || branch === '**') {\n              if (tree[branch]._listeners && !endReached) {\n                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n              }\n\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n            } else if (branch === nextType) {\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n            } else {\n              // No match on this one, shift into the tree but not in the type array.\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n            }\n          }\n        }\n\n        return listeners;\n      }\n\n      listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n    }\n\n    xTree = tree['*'];\n\n    if (xTree) {\n      //\n      // If the listener tree will allow any match for this part,\n      // then recursively explore all branches of the tree\n      //\n      searchListenerTree(handlers, type, xTree, i + 1);\n    }\n\n    xxTree = tree['**'];\n\n    if (xxTree) {\n      if (i < typeLength) {\n        if (xxTree._listeners) {\n          // If we have a listener on a '**', it will catch all, so add its handler.\n          searchListenerTree(handlers, type, xxTree, typeLength);\n        } // Build arrays of matching next branches and others.\n\n\n        for (branch in xxTree) {\n          if (branch !== '_listeners' && xxTree.hasOwnProperty(branch)) {\n            if (branch === nextType) {\n              // We know the next element will match, so jump twice.\n              searchListenerTree(handlers, type, xxTree[branch], i + 2);\n            } else if (branch === currentType) {\n              // Current node matches, move into the tree.\n              searchListenerTree(handlers, type, xxTree[branch], i + 1);\n            } else {\n              isolatedBranch = {};\n              isolatedBranch[branch] = xxTree[branch];\n              searchListenerTree(handlers, type, {\n                '**': isolatedBranch\n              }, i + 1);\n            }\n          }\n        }\n      } else if (xxTree._listeners) {\n        // We have reached the end and still on a '**'\n        searchListenerTree(handlers, type, xxTree, typeLength);\n      } else if (xxTree['*'] && xxTree['*']._listeners) {\n        searchListenerTree(handlers, type, xxTree['*'], typeLength);\n      }\n    }\n\n    return listeners;\n  }\n\n  function growListenerTree(type, listener) {\n    type = typeof type === 'string' ? type.split(this.delimiter) : type.slice(); //\n    // Looks for two consecutive '**', if so, don't add the event at all.\n    //\n\n    for (var i = 0, len = type.length; i + 1 < len; i++) {\n      if (type[i] === '**' && type[i + 1] === '**') {\n        return;\n      }\n    }\n\n    var tree = this.listenerTree;\n    var name = type.shift();\n\n    while (name !== undefined) {\n      if (!tree[name]) {\n        tree[name] = {};\n      }\n\n      tree = tree[name];\n\n      if (type.length === 0) {\n        if (!tree._listeners) {\n          tree._listeners = listener;\n        } else {\n          if (typeof tree._listeners === 'function') {\n            tree._listeners = [tree._listeners];\n          }\n\n          tree._listeners.push(listener);\n\n          if (!tree._listeners.warned && this._maxListeners > 0 && tree._listeners.length > this._maxListeners) {\n            tree._listeners.warned = true;\n            logPossibleMemoryLeak.call(this, tree._listeners.length, name);\n          }\n        }\n\n        return true;\n      }\n\n      name = type.shift();\n    }\n\n    return true;\n  } // By default EventEmitters will print a warning if more than\n  // 10 listeners are added to it. This is a useful default which\n  // helps finding memory leaks.\n  //\n  // Obviously not all Emitters should be limited to 10. This function allows\n  // that to be increased. Set to zero for unlimited.\n\n\n  EventEmitter.prototype.delimiter = '.';\n\n  EventEmitter.prototype.setMaxListeners = function (n) {\n    if (n !== undefined) {\n      this._maxListeners = n;\n      if (!this._conf) this._conf = {};\n      this._conf.maxListeners = n;\n    }\n  };\n\n  EventEmitter.prototype.event = '';\n\n  EventEmitter.prototype.once = function (event, fn) {\n    return this._once(event, fn, false);\n  };\n\n  EventEmitter.prototype.prependOnceListener = function (event, fn) {\n    return this._once(event, fn, true);\n  };\n\n  EventEmitter.prototype._once = function (event, fn, prepend) {\n    this._many(event, 1, fn, prepend);\n\n    return this;\n  };\n\n  EventEmitter.prototype.many = function (event, ttl, fn) {\n    return this._many(event, ttl, fn, false);\n  };\n\n  EventEmitter.prototype.prependMany = function (event, ttl, fn) {\n    return this._many(event, ttl, fn, true);\n  };\n\n  EventEmitter.prototype._many = function (event, ttl, fn, prepend) {\n    var self = this;\n\n    if (typeof fn !== 'function') {\n      throw new Error('many only accepts instances of Function');\n    }\n\n    function listener() {\n      if (--ttl === 0) {\n        self.off(event, listener);\n      }\n\n      return fn.apply(this, arguments);\n    }\n\n    listener._origin = fn;\n\n    this._on(event, listener, prepend);\n\n    return self;\n  };\n\n  EventEmitter.prototype.emit = function () {\n    this._events || init.call(this);\n    var type = arguments[0];\n\n    if (type === 'newListener' && !this.newListener) {\n      if (!this._events.newListener) {\n        return false;\n      }\n    }\n\n    var al = arguments.length;\n    var args, l, i, j;\n    var handler;\n\n    if (this._all && this._all.length) {\n      handler = this._all.slice();\n\n      if (al > 3) {\n        args = new Array(al);\n\n        for (j = 0; j < al; j++) args[j] = arguments[j];\n      }\n\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n\n        switch (al) {\n          case 1:\n            handler[i].call(this, type);\n            break;\n\n          case 2:\n            handler[i].call(this, type, arguments[1]);\n            break;\n\n          case 3:\n            handler[i].call(this, type, arguments[1], arguments[2]);\n            break;\n\n          default:\n            handler[i].apply(this, args);\n        }\n      }\n    }\n\n    if (this.wildcard) {\n      handler = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n    } else {\n      handler = this._events[type];\n\n      if (typeof handler === 'function') {\n        this.event = type;\n\n        switch (al) {\n          case 1:\n            handler.call(this);\n            break;\n\n          case 2:\n            handler.call(this, arguments[1]);\n            break;\n\n          case 3:\n            handler.call(this, arguments[1], arguments[2]);\n            break;\n\n          default:\n            args = new Array(al - 1);\n\n            for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n\n            handler.apply(this, args);\n        }\n\n        return true;\n      } else if (handler) {\n        // need to make copy of handlers because list can change in the middle\n        // of emit call\n        handler = handler.slice();\n      }\n    }\n\n    if (handler && handler.length) {\n      if (al > 3) {\n        args = new Array(al - 1);\n\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n      }\n\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n\n        switch (al) {\n          case 1:\n            handler[i].call(this);\n            break;\n\n          case 2:\n            handler[i].call(this, arguments[1]);\n            break;\n\n          case 3:\n            handler[i].call(this, arguments[1], arguments[2]);\n            break;\n\n          default:\n            handler[i].apply(this, args);\n        }\n      }\n\n      return true;\n    } else if (!this._all && type === 'error') {\n      if (arguments[1] instanceof Error) {\n        throw arguments[1]; // Unhandled 'error' event\n      } else {\n        throw new Error(\"Uncaught, unspecified 'error' event.\");\n      }\n\n      return false;\n    }\n\n    return !!this._all;\n  };\n\n  EventEmitter.prototype.emitAsync = function () {\n    this._events || init.call(this);\n    var type = arguments[0];\n\n    if (type === 'newListener' && !this.newListener) {\n      if (!this._events.newListener) {\n        return Promise.resolve([false]);\n      }\n    }\n\n    var promises = [];\n    var al = arguments.length;\n    var args, l, i, j;\n    var handler;\n\n    if (this._all) {\n      if (al > 3) {\n        args = new Array(al);\n\n        for (j = 1; j < al; j++) args[j] = arguments[j];\n      }\n\n      for (i = 0, l = this._all.length; i < l; i++) {\n        this.event = type;\n\n        switch (al) {\n          case 1:\n            promises.push(this._all[i].call(this, type));\n            break;\n\n          case 2:\n            promises.push(this._all[i].call(this, type, arguments[1]));\n            break;\n\n          case 3:\n            promises.push(this._all[i].call(this, type, arguments[1], arguments[2]));\n            break;\n\n          default:\n            promises.push(this._all[i].apply(this, args));\n        }\n      }\n    }\n\n    if (this.wildcard) {\n      handler = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n    } else {\n      handler = this._events[type];\n    }\n\n    if (typeof handler === 'function') {\n      this.event = type;\n\n      switch (al) {\n        case 1:\n          promises.push(handler.call(this));\n          break;\n\n        case 2:\n          promises.push(handler.call(this, arguments[1]));\n          break;\n\n        case 3:\n          promises.push(handler.call(this, arguments[1], arguments[2]));\n          break;\n\n        default:\n          args = new Array(al - 1);\n\n          for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n\n          promises.push(handler.apply(this, args));\n      }\n    } else if (handler && handler.length) {\n      handler = handler.slice();\n\n      if (al > 3) {\n        args = new Array(al - 1);\n\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n      }\n\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n\n        switch (al) {\n          case 1:\n            promises.push(handler[i].call(this));\n            break;\n\n          case 2:\n            promises.push(handler[i].call(this, arguments[1]));\n            break;\n\n          case 3:\n            promises.push(handler[i].call(this, arguments[1], arguments[2]));\n            break;\n\n          default:\n            promises.push(handler[i].apply(this, args));\n        }\n      }\n    } else if (!this._all && type === 'error') {\n      if (arguments[1] instanceof Error) {\n        return Promise.reject(arguments[1]); // Unhandled 'error' event\n      } else {\n        return Promise.reject(\"Uncaught, unspecified 'error' event.\");\n      }\n    }\n\n    return Promise.all(promises);\n  };\n\n  EventEmitter.prototype.on = function (type, listener) {\n    return this._on(type, listener, false);\n  };\n\n  EventEmitter.prototype.prependListener = function (type, listener) {\n    return this._on(type, listener, true);\n  };\n\n  EventEmitter.prototype.onAny = function (fn) {\n    return this._onAny(fn, false);\n  };\n\n  EventEmitter.prototype.prependAny = function (fn) {\n    return this._onAny(fn, true);\n  };\n\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n  EventEmitter.prototype._onAny = function (fn, prepend) {\n    if (typeof fn !== 'function') {\n      throw new Error('onAny only accepts instances of Function');\n    }\n\n    if (!this._all) {\n      this._all = [];\n    } // Add the function to the event listener collection.\n\n\n    if (prepend) {\n      this._all.unshift(fn);\n    } else {\n      this._all.push(fn);\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype._on = function (type, listener, prepend) {\n    if (typeof type === 'function') {\n      this._onAny(type, listener);\n\n      return this;\n    }\n\n    if (typeof listener !== 'function') {\n      throw new Error('on only accepts instances of Function');\n    }\n\n    this._events || init.call(this); // To avoid recursion in the case that type == \"newListeners\"! Before\n    // adding it to the listeners, first emit \"newListeners\".\n\n    this.emit('newListener', type, listener);\n\n    if (this.wildcard) {\n      growListenerTree.call(this, type, listener);\n      return this;\n    }\n\n    if (!this._events[type]) {\n      // Optimize the case of one listener. Don't need the extra array object.\n      this._events[type] = listener;\n    } else {\n      if (typeof this._events[type] === 'function') {\n        // Change to array.\n        this._events[type] = [this._events[type]];\n      } // If we've already got an array, just add\n\n\n      if (prepend) {\n        this._events[type].unshift(listener);\n      } else {\n        this._events[type].push(listener);\n      } // Check for listener leak\n\n\n      if (!this._events[type].warned && this._maxListeners > 0 && this._events[type].length > this._maxListeners) {\n        this._events[type].warned = true;\n        logPossibleMemoryLeak.call(this, this._events[type].length, type);\n      }\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype.off = function (type, listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('removeListener only takes instances of Function');\n    }\n\n    var handlers,\n        leafs = [];\n\n    if (this.wildcard) {\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n    } else {\n      // does not use listeners(), so no side effect of creating _events[type]\n      if (!this._events[type]) return this;\n      handlers = this._events[type];\n      leafs.push({\n        _listeners: handlers\n      });\n    }\n\n    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n      var leaf = leafs[iLeaf];\n      handlers = leaf._listeners;\n\n      if (isArray(handlers)) {\n        var position = -1;\n\n        for (var i = 0, length = handlers.length; i < length; i++) {\n          if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0) {\n          continue;\n        }\n\n        if (this.wildcard) {\n          leaf._listeners.splice(position, 1);\n        } else {\n          this._events[type].splice(position, 1);\n        }\n\n        if (handlers.length === 0) {\n          if (this.wildcard) {\n            delete leaf._listeners;\n          } else {\n            delete this._events[type];\n          }\n        }\n\n        this.emit(\"removeListener\", type, listener);\n        return this;\n      } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n        if (this.wildcard) {\n          delete leaf._listeners;\n        } else {\n          delete this._events[type];\n        }\n\n        this.emit(\"removeListener\", type, listener);\n      }\n    }\n\n    function recursivelyGarbageCollect(root) {\n      if (root === undefined) {\n        return;\n      }\n\n      var keys = Object.keys(root);\n\n      for (var i in keys) {\n        var key = keys[i];\n        var obj = root[key];\n        if (obj instanceof Function || typeof obj !== \"object\" || obj === null) continue;\n\n        if (Object.keys(obj).length > 0) {\n          recursivelyGarbageCollect(root[key]);\n        }\n\n        if (Object.keys(obj).length === 0) {\n          delete root[key];\n        }\n      }\n    }\n\n    recursivelyGarbageCollect(this.listenerTree);\n    return this;\n  };\n\n  EventEmitter.prototype.offAny = function (fn) {\n    var i = 0,\n        l = 0,\n        fns;\n\n    if (fn && this._all && this._all.length > 0) {\n      fns = this._all;\n\n      for (i = 0, l = fns.length; i < l; i++) {\n        if (fn === fns[i]) {\n          fns.splice(i, 1);\n          this.emit(\"removeListenerAny\", fn);\n          return this;\n        }\n      }\n    } else {\n      fns = this._all;\n\n      for (i = 0, l = fns.length; i < l; i++) this.emit(\"removeListenerAny\", fns[i]);\n\n      this._all = [];\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\n  EventEmitter.prototype.removeAllListeners = function (type) {\n    if (arguments.length === 0) {\n      !this._events || init.call(this);\n      return this;\n    }\n\n    if (this.wildcard) {\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\n      for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n        var leaf = leafs[iLeaf];\n        leaf._listeners = null;\n      }\n    } else if (this._events) {\n      this._events[type] = null;\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype.listeners = function (type) {\n    if (this.wildcard) {\n      var handlers = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n      return handlers;\n    }\n\n    this._events || init.call(this);\n    if (!this._events[type]) this._events[type] = [];\n\n    if (!isArray(this._events[type])) {\n      this._events[type] = [this._events[type]];\n    }\n\n    return this._events[type];\n  };\n\n  EventEmitter.prototype.eventNames = function () {\n    return Object.keys(this._events);\n  };\n\n  EventEmitter.prototype.listenerCount = function (type) {\n    return this.listeners(type).length;\n  };\n\n  EventEmitter.prototype.listenersAny = function () {\n    if (this._all) {\n      return this._all;\n    } else {\n      return [];\n    }\n  };\n\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(function () {\n      return EventEmitter;\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = EventEmitter;\n  } else {\n    // Browser global.\n    window.EventEmitter2 = EventEmitter;\n  }\n}();","map":{"version":3,"sources":["/home/alexemdesgagne/octopus-telemetry/src/node_modules/eventemitter2/lib/eventemitter2.js"],"names":["undefined","isArray","Array","_isArray","obj","Object","prototype","toString","call","defaultMaxListeners","init","_events","_conf","configure","conf","delimiter","_maxListeners","maxListeners","wildcard","newListener","verboseMemoryLeak","listenerTree","logPossibleMemoryLeak","count","eventName","errorMsg","process","emitWarning","e","Error","name","emitter","console","error","trace","EventEmitter","EventEmitter2","searchListenerTree","handlers","type","tree","i","listeners","leaf","len","branch","xTree","xxTree","isolatedBranch","endReached","typeLength","length","currentType","nextType","_listeners","push","hasOwnProperty","concat","growListenerTree","listener","split","slice","shift","warned","setMaxListeners","n","event","once","fn","_once","prependOnceListener","prepend","_many","many","ttl","prependMany","self","off","apply","arguments","_origin","_on","emit","al","args","l","j","handler","_all","ns","emitAsync","Promise","resolve","promises","reject","all","on","prependListener","onAny","_onAny","prependAny","addListener","unshift","leafs","iLeaf","position","splice","recursivelyGarbageCollect","root","keys","key","Function","offAny","fns","removeListener","removeAllListeners","eventNames","listenerCount","listenersAny","define","amd","exports","module","window"],"mappings":"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","sourcesContent":["/*!\r\n * EventEmitter2\r\n * https://github.com/hij1nx/EventEmitter2\r\n *\r\n * Copyright (c) 2013 hij1nx\r\n * Licensed under the MIT license.\r\n */\r\n;!function(undefined) {\r\n\r\n  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\r\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n  };\r\n  var defaultMaxListeners = 10;\r\n\r\n  function init() {\r\n    this._events = {};\r\n    if (this._conf) {\r\n      configure.call(this, this._conf);\r\n    }\r\n  }\r\n\r\n  function configure(conf) {\r\n    if (conf) {\r\n      this._conf = conf;\r\n\r\n      conf.delimiter && (this.delimiter = conf.delimiter);\r\n      this._maxListeners = conf.maxListeners !== undefined ? conf.maxListeners : defaultMaxListeners;\r\n\r\n      conf.wildcard && (this.wildcard = conf.wildcard);\r\n      conf.newListener && (this.newListener = conf.newListener);\r\n      conf.verboseMemoryLeak && (this.verboseMemoryLeak = conf.verboseMemoryLeak);\r\n\r\n      if (this.wildcard) {\r\n        this.listenerTree = {};\r\n      }\r\n    } else {\r\n      this._maxListeners = defaultMaxListeners;\r\n    }\r\n  }\r\n\r\n  function logPossibleMemoryLeak(count, eventName) {\r\n    var errorMsg = '(node) warning: possible EventEmitter memory ' +\r\n        'leak detected. ' + count + ' listeners added. ' +\r\n        'Use emitter.setMaxListeners() to increase limit.';\r\n\r\n    if(this.verboseMemoryLeak){\r\n      errorMsg += ' Event name: ' + eventName + '.';\r\n    }\r\n\r\n    if(typeof process !== 'undefined' && process.emitWarning){\r\n      var e = new Error(errorMsg);\r\n      e.name = 'MaxListenersExceededWarning';\r\n      e.emitter = this;\r\n      e.count = count;\r\n      process.emitWarning(e);\r\n    } else {\r\n      console.error(errorMsg);\r\n\r\n      if (console.trace){\r\n        console.trace();\r\n      }\r\n    }\r\n  }\r\n\r\n  function EventEmitter(conf) {\r\n    this._events = {};\r\n    this.newListener = false;\r\n    this.verboseMemoryLeak = false;\r\n    configure.call(this, conf);\r\n  }\r\n  EventEmitter.EventEmitter2 = EventEmitter; // backwards compatibility for exporting EventEmitter property\r\n\r\n  //\r\n  // Attention, function return type now is array, always !\r\n  // It has zero elements if no any matches found and one or more\r\n  // elements (leafs) if there are matches\r\n  //\r\n  function searchListenerTree(handlers, type, tree, i) {\r\n    if (!tree) {\r\n      return [];\r\n    }\r\n    var listeners=[], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached,\r\n        typeLength = type.length, currentType = type[i], nextType = type[i+1];\r\n    if (i === typeLength && tree._listeners) {\r\n      //\r\n      // If at the end of the event(s) list and the tree has listeners\r\n      // invoke those listeners.\r\n      //\r\n      if (typeof tree._listeners === 'function') {\r\n        handlers && handlers.push(tree._listeners);\r\n        return [tree];\r\n      } else {\r\n        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\r\n          handlers && handlers.push(tree._listeners[leaf]);\r\n        }\r\n        return [tree];\r\n      }\r\n    }\r\n\r\n    if ((currentType === '*' || currentType === '**') || tree[currentType]) {\r\n      //\r\n      // If the event emitted is '*' at this part\r\n      // or there is a concrete match at this patch\r\n      //\r\n      if (currentType === '*') {\r\n        for (branch in tree) {\r\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\r\n            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+1));\r\n          }\r\n        }\r\n        return listeners;\r\n      } else if(currentType === '**') {\r\n        endReached = (i+1 === typeLength || (i+2 === typeLength && nextType === '*'));\r\n        if(endReached && tree._listeners) {\r\n          // The next element has a _listeners, add it to the handlers.\r\n          listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\r\n        }\r\n\r\n        for (branch in tree) {\r\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\r\n            if(branch === '*' || branch === '**') {\r\n              if(tree[branch]._listeners && !endReached) {\r\n                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\r\n              }\r\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\r\n            } else if(branch === nextType) {\r\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+2));\r\n            } else {\r\n              // No match on this one, shift into the tree but not in the type array.\r\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\r\n            }\r\n          }\r\n        }\r\n        return listeners;\r\n      }\r\n\r\n      listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i+1));\r\n    }\r\n\r\n    xTree = tree['*'];\r\n    if (xTree) {\r\n      //\r\n      // If the listener tree will allow any match for this part,\r\n      // then recursively explore all branches of the tree\r\n      //\r\n      searchListenerTree(handlers, type, xTree, i+1);\r\n    }\r\n\r\n    xxTree = tree['**'];\r\n    if(xxTree) {\r\n      if(i < typeLength) {\r\n        if(xxTree._listeners) {\r\n          // If we have a listener on a '**', it will catch all, so add its handler.\r\n          searchListenerTree(handlers, type, xxTree, typeLength);\r\n        }\r\n\r\n        // Build arrays of matching next branches and others.\r\n        for(branch in xxTree) {\r\n          if(branch !== '_listeners' && xxTree.hasOwnProperty(branch)) {\r\n            if(branch === nextType) {\r\n              // We know the next element will match, so jump twice.\r\n              searchListenerTree(handlers, type, xxTree[branch], i+2);\r\n            } else if(branch === currentType) {\r\n              // Current node matches, move into the tree.\r\n              searchListenerTree(handlers, type, xxTree[branch], i+1);\r\n            } else {\r\n              isolatedBranch = {};\r\n              isolatedBranch[branch] = xxTree[branch];\r\n              searchListenerTree(handlers, type, { '**': isolatedBranch }, i+1);\r\n            }\r\n          }\r\n        }\r\n      } else if(xxTree._listeners) {\r\n        // We have reached the end and still on a '**'\r\n        searchListenerTree(handlers, type, xxTree, typeLength);\r\n      } else if(xxTree['*'] && xxTree['*']._listeners) {\r\n        searchListenerTree(handlers, type, xxTree['*'], typeLength);\r\n      }\r\n    }\r\n\r\n    return listeners;\r\n  }\r\n\r\n  function growListenerTree(type, listener) {\r\n\r\n    type = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n\r\n    //\r\n    // Looks for two consecutive '**', if so, don't add the event at all.\r\n    //\r\n    for(var i = 0, len = type.length; i+1 < len; i++) {\r\n      if(type[i] === '**' && type[i+1] === '**') {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var tree = this.listenerTree;\r\n    var name = type.shift();\r\n\r\n    while (name !== undefined) {\r\n\r\n      if (!tree[name]) {\r\n        tree[name] = {};\r\n      }\r\n\r\n      tree = tree[name];\r\n\r\n      if (type.length === 0) {\r\n\r\n        if (!tree._listeners) {\r\n          tree._listeners = listener;\r\n        }\r\n        else {\r\n          if (typeof tree._listeners === 'function') {\r\n            tree._listeners = [tree._listeners];\r\n          }\r\n\r\n          tree._listeners.push(listener);\r\n\r\n          if (\r\n            !tree._listeners.warned &&\r\n            this._maxListeners > 0 &&\r\n            tree._listeners.length > this._maxListeners\r\n          ) {\r\n            tree._listeners.warned = true;\r\n            logPossibleMemoryLeak.call(this, tree._listeners.length, name);\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n      name = type.shift();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // By default EventEmitters will print a warning if more than\r\n  // 10 listeners are added to it. This is a useful default which\r\n  // helps finding memory leaks.\r\n  //\r\n  // Obviously not all Emitters should be limited to 10. This function allows\r\n  // that to be increased. Set to zero for unlimited.\r\n\r\n  EventEmitter.prototype.delimiter = '.';\r\n\r\n  EventEmitter.prototype.setMaxListeners = function(n) {\r\n    if (n !== undefined) {\r\n      this._maxListeners = n;\r\n      if (!this._conf) this._conf = {};\r\n      this._conf.maxListeners = n;\r\n    }\r\n  };\r\n\r\n  EventEmitter.prototype.event = '';\r\n\r\n\r\n  EventEmitter.prototype.once = function(event, fn) {\r\n    return this._once(event, fn, false);\r\n  };\r\n\r\n  EventEmitter.prototype.prependOnceListener = function(event, fn) {\r\n    return this._once(event, fn, true);\r\n  };\r\n\r\n  EventEmitter.prototype._once = function(event, fn, prepend) {\r\n    this._many(event, 1, fn, prepend);\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.many = function(event, ttl, fn) {\r\n    return this._many(event, ttl, fn, false);\r\n  }\r\n\r\n  EventEmitter.prototype.prependMany = function(event, ttl, fn) {\r\n    return this._many(event, ttl, fn, true);\r\n  }\r\n\r\n  EventEmitter.prototype._many = function(event, ttl, fn, prepend) {\r\n    var self = this;\r\n\r\n    if (typeof fn !== 'function') {\r\n      throw new Error('many only accepts instances of Function');\r\n    }\r\n\r\n    function listener() {\r\n      if (--ttl === 0) {\r\n        self.off(event, listener);\r\n      }\r\n      return fn.apply(this, arguments);\r\n    }\r\n\r\n    listener._origin = fn;\r\n\r\n    this._on(event, listener, prepend);\r\n\r\n    return self;\r\n  };\r\n\r\n  EventEmitter.prototype.emit = function() {\r\n\r\n    this._events || init.call(this);\r\n\r\n    var type = arguments[0];\r\n\r\n    if (type === 'newListener' && !this.newListener) {\r\n      if (!this._events.newListener) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    var al = arguments.length;\r\n    var args,l,i,j;\r\n    var handler;\r\n\r\n    if (this._all && this._all.length) {\r\n      handler = this._all.slice();\r\n      if (al > 3) {\r\n        args = new Array(al);\r\n        for (j = 0; j < al; j++) args[j] = arguments[j];\r\n      }\r\n\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler[i].call(this, type);\r\n          break;\r\n        case 2:\r\n          handler[i].call(this, type, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler[i].call(this, type, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          handler[i].apply(this, args);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      handler = [];\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\r\n    } else {\r\n      handler = this._events[type];\r\n      if (typeof handler === 'function') {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler.call(this);\r\n          break;\r\n        case 2:\r\n          handler.call(this, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler.call(this, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          args = new Array(al - 1);\r\n          for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n          handler.apply(this, args);\r\n        }\r\n        return true;\r\n      } else if (handler) {\r\n        // need to make copy of handlers because list can change in the middle\r\n        // of emit call\r\n        handler = handler.slice();\r\n      }\r\n    }\r\n\r\n    if (handler && handler.length) {\r\n      if (al > 3) {\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n      }\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler[i].call(this);\r\n          break;\r\n        case 2:\r\n          handler[i].call(this, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler[i].call(this, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          handler[i].apply(this, args);\r\n        }\r\n      }\r\n      return true;\r\n    } else if (!this._all && type === 'error') {\r\n      if (arguments[1] instanceof Error) {\r\n        throw arguments[1]; // Unhandled 'error' event\r\n      } else {\r\n        throw new Error(\"Uncaught, unspecified 'error' event.\");\r\n      }\r\n      return false;\r\n    }\r\n\r\n    return !!this._all;\r\n  };\r\n\r\n  EventEmitter.prototype.emitAsync = function() {\r\n\r\n    this._events || init.call(this);\r\n\r\n    var type = arguments[0];\r\n\r\n    if (type === 'newListener' && !this.newListener) {\r\n        if (!this._events.newListener) { return Promise.resolve([false]); }\r\n    }\r\n\r\n    var promises= [];\r\n\r\n    var al = arguments.length;\r\n    var args,l,i,j;\r\n    var handler;\r\n\r\n    if (this._all) {\r\n      if (al > 3) {\r\n        args = new Array(al);\r\n        for (j = 1; j < al; j++) args[j] = arguments[j];\r\n      }\r\n      for (i = 0, l = this._all.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          promises.push(this._all[i].call(this, type));\r\n          break;\r\n        case 2:\r\n          promises.push(this._all[i].call(this, type, arguments[1]));\r\n          break;\r\n        case 3:\r\n          promises.push(this._all[i].call(this, type, arguments[1], arguments[2]));\r\n          break;\r\n        default:\r\n          promises.push(this._all[i].apply(this, args));\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      handler = [];\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\r\n    } else {\r\n      handler = this._events[type];\r\n    }\r\n\r\n    if (typeof handler === 'function') {\r\n      this.event = type;\r\n      switch (al) {\r\n      case 1:\r\n        promises.push(handler.call(this));\r\n        break;\r\n      case 2:\r\n        promises.push(handler.call(this, arguments[1]));\r\n        break;\r\n      case 3:\r\n        promises.push(handler.call(this, arguments[1], arguments[2]));\r\n        break;\r\n      default:\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n        promises.push(handler.apply(this, args));\r\n      }\r\n    } else if (handler && handler.length) {\r\n      handler = handler.slice();\r\n      if (al > 3) {\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n      }\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          promises.push(handler[i].call(this));\r\n          break;\r\n        case 2:\r\n          promises.push(handler[i].call(this, arguments[1]));\r\n          break;\r\n        case 3:\r\n          promises.push(handler[i].call(this, arguments[1], arguments[2]));\r\n          break;\r\n        default:\r\n          promises.push(handler[i].apply(this, args));\r\n        }\r\n      }\r\n    } else if (!this._all && type === 'error') {\r\n      if (arguments[1] instanceof Error) {\r\n        return Promise.reject(arguments[1]); // Unhandled 'error' event\r\n      } else {\r\n        return Promise.reject(\"Uncaught, unspecified 'error' event.\");\r\n      }\r\n    }\r\n\r\n    return Promise.all(promises);\r\n  };\r\n\r\n  EventEmitter.prototype.on = function(type, listener) {\r\n    return this._on(type, listener, false);\r\n  };\r\n\r\n  EventEmitter.prototype.prependListener = function(type, listener) {\r\n    return this._on(type, listener, true);\r\n  };\r\n\r\n  EventEmitter.prototype.onAny = function(fn) {\r\n    return this._onAny(fn, false);\r\n  };\r\n\r\n  EventEmitter.prototype.prependAny = function(fn) {\r\n    return this._onAny(fn, true);\r\n  };\r\n\r\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\r\n\r\n  EventEmitter.prototype._onAny = function(fn, prepend){\r\n    if (typeof fn !== 'function') {\r\n      throw new Error('onAny only accepts instances of Function');\r\n    }\r\n\r\n    if (!this._all) {\r\n      this._all = [];\r\n    }\r\n\r\n    // Add the function to the event listener collection.\r\n    if(prepend){\r\n      this._all.unshift(fn);\r\n    }else{\r\n      this._all.push(fn);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  EventEmitter.prototype._on = function(type, listener, prepend) {\r\n    if (typeof type === 'function') {\r\n      this._onAny(type, listener);\r\n      return this;\r\n    }\r\n\r\n    if (typeof listener !== 'function') {\r\n      throw new Error('on only accepts instances of Function');\r\n    }\r\n    this._events || init.call(this);\r\n\r\n    // To avoid recursion in the case that type == \"newListeners\"! Before\r\n    // adding it to the listeners, first emit \"newListeners\".\r\n    this.emit('newListener', type, listener);\r\n\r\n    if (this.wildcard) {\r\n      growListenerTree.call(this, type, listener);\r\n      return this;\r\n    }\r\n\r\n    if (!this._events[type]) {\r\n      // Optimize the case of one listener. Don't need the extra array object.\r\n      this._events[type] = listener;\r\n    }\r\n    else {\r\n      if (typeof this._events[type] === 'function') {\r\n        // Change to array.\r\n        this._events[type] = [this._events[type]];\r\n      }\r\n\r\n      // If we've already got an array, just add\r\n      if(prepend){\r\n        this._events[type].unshift(listener);\r\n      }else{\r\n        this._events[type].push(listener);\r\n      }\r\n\r\n      // Check for listener leak\r\n      if (\r\n        !this._events[type].warned &&\r\n        this._maxListeners > 0 &&\r\n        this._events[type].length > this._maxListeners\r\n      ) {\r\n        this._events[type].warned = true;\r\n        logPossibleMemoryLeak.call(this, this._events[type].length, type);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  EventEmitter.prototype.off = function(type, listener) {\r\n    if (typeof listener !== 'function') {\r\n      throw new Error('removeListener only takes instances of Function');\r\n    }\r\n\r\n    var handlers,leafs=[];\r\n\r\n    if(this.wildcard) {\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\r\n    }\r\n    else {\r\n      // does not use listeners(), so no side effect of creating _events[type]\r\n      if (!this._events[type]) return this;\r\n      handlers = this._events[type];\r\n      leafs.push({_listeners:handlers});\r\n    }\r\n\r\n    for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\r\n      var leaf = leafs[iLeaf];\r\n      handlers = leaf._listeners;\r\n      if (isArray(handlers)) {\r\n\r\n        var position = -1;\r\n\r\n        for (var i = 0, length = handlers.length; i < length; i++) {\r\n          if (handlers[i] === listener ||\r\n            (handlers[i].listener && handlers[i].listener === listener) ||\r\n            (handlers[i]._origin && handlers[i]._origin === listener)) {\r\n            position = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (position < 0) {\r\n          continue;\r\n        }\r\n\r\n        if(this.wildcard) {\r\n          leaf._listeners.splice(position, 1);\r\n        }\r\n        else {\r\n          this._events[type].splice(position, 1);\r\n        }\r\n\r\n        if (handlers.length === 0) {\r\n          if(this.wildcard) {\r\n            delete leaf._listeners;\r\n          }\r\n          else {\r\n            delete this._events[type];\r\n          }\r\n        }\r\n\r\n        this.emit(\"removeListener\", type, listener);\r\n\r\n        return this;\r\n      }\r\n      else if (handlers === listener ||\r\n        (handlers.listener && handlers.listener === listener) ||\r\n        (handlers._origin && handlers._origin === listener)) {\r\n        if(this.wildcard) {\r\n          delete leaf._listeners;\r\n        }\r\n        else {\r\n          delete this._events[type];\r\n        }\r\n\r\n        this.emit(\"removeListener\", type, listener);\r\n      }\r\n    }\r\n\r\n    function recursivelyGarbageCollect(root) {\r\n      if (root === undefined) {\r\n        return;\r\n      }\r\n      var keys = Object.keys(root);\r\n      for (var i in keys) {\r\n        var key = keys[i];\r\n        var obj = root[key];\r\n        if ((obj instanceof Function) || (typeof obj !== \"object\") || (obj === null))\r\n          continue;\r\n        if (Object.keys(obj).length > 0) {\r\n          recursivelyGarbageCollect(root[key]);\r\n        }\r\n        if (Object.keys(obj).length === 0) {\r\n          delete root[key];\r\n        }\r\n      }\r\n    }\r\n    recursivelyGarbageCollect(this.listenerTree);\r\n\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.offAny = function(fn) {\r\n    var i = 0, l = 0, fns;\r\n    if (fn && this._all && this._all.length > 0) {\r\n      fns = this._all;\r\n      for(i = 0, l = fns.length; i < l; i++) {\r\n        if(fn === fns[i]) {\r\n          fns.splice(i, 1);\r\n          this.emit(\"removeListenerAny\", fn);\r\n          return this;\r\n        }\r\n      }\r\n    } else {\r\n      fns = this._all;\r\n      for(i = 0, l = fns.length; i < l; i++)\r\n        this.emit(\"removeListenerAny\", fns[i]);\r\n      this._all = [];\r\n    }\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\r\n\r\n  EventEmitter.prototype.removeAllListeners = function(type) {\r\n    if (arguments.length === 0) {\r\n      !this._events || init.call(this);\r\n      return this;\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\r\n\r\n      for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\r\n        var leaf = leafs[iLeaf];\r\n        leaf._listeners = null;\r\n      }\r\n    }\r\n    else if (this._events) {\r\n      this._events[type] = null;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.listeners = function(type) {\r\n    if (this.wildcard) {\r\n      var handlers = [];\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\r\n      return handlers;\r\n    }\r\n\r\n    this._events || init.call(this);\r\n\r\n    if (!this._events[type]) this._events[type] = [];\r\n    if (!isArray(this._events[type])) {\r\n      this._events[type] = [this._events[type]];\r\n    }\r\n    return this._events[type];\r\n  };\r\n\r\n  EventEmitter.prototype.eventNames = function(){\r\n    return Object.keys(this._events);\r\n  }\r\n\r\n  EventEmitter.prototype.listenerCount = function(type) {\r\n    return this.listeners(type).length;\r\n  };\r\n\r\n  EventEmitter.prototype.listenersAny = function() {\r\n\r\n    if(this._all) {\r\n      return this._all;\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n\r\n  };\r\n\r\n  if (typeof define === 'function' && define.amd) {\r\n     // AMD. Register as an anonymous module.\r\n    define(function() {\r\n      return EventEmitter;\r\n    });\r\n  } else if (typeof exports === 'object') {\r\n    // CommonJS\r\n    module.exports = EventEmitter;\r\n  }\r\n  else {\r\n    // Browser global.\r\n    window.EventEmitter2 = EventEmitter;\r\n  }\r\n}();\r\n"]},"metadata":{},"sourceType":"script"}