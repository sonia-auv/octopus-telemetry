{"ast":null,"code":"var GUAGE_FOREGROUND = \"#FFFFFF\";\nvar GUAGE_BACKGROUND = \"#191921\";\nvar BUG = \"#F844F8\";\nexport function drawTickerDigit(ctx, list, value, scrollThreshold, digitSpacing, location, fontSize) {\n  var x = location.x;\n  var y = location.y;\n  var wid = location.width;\n  var hei = location.height;\n  ctx.save();\n  ctx.rect(x, y, wid, hei);\n  ctx.clip();\n  ctx.fillStyle = GUAGE_BACKGROUND;\n  ctx.fillRect(x, y, wid, hei);\n  ctx.font = fontSize + \"px 'Arial', Gadget, sans-serif\";\n  ctx.fillStyle = GUAGE_FOREGROUND;\n  ctx.textAlign = \"center\";\n  ctx.textBaseline = 'middle';\n  var index = Math.floor(value + 0.5);\n  var length = list.length;\n  var progress = value - Math.floor(value);\n  var valueOffset = Math.floor(value);\n\n  if (progress > 1 - scrollThreshold) {\n    var ratio = (progress - (1 - scrollThreshold)) / scrollThreshold;\n    valueOffset = Math.floor(value) + ratio;\n  }\n\n  for (var i = index - 2; i <= index + 2; i++) {\n    var I = i % length;\n    var xLoc = x + wid / 2;\n    var yLoc = y + hei / 2;\n    var offset = -(fontSize + digitSpacing) * (i - valueOffset);\n\n    if (I > -1) {\n      ctx.fillText(list[I], xLoc, yLoc + offset);\n    }\n  }\n\n  ctx.restore();\n} // Scale in pixels per small tick\n// Negative is negative allowed\n\nexport function drawTape(ctx, location, fontSize, leftAlign, bigTicks, smallTicks, negative, scale, value, bugValue, inverted) {\n  var x = location.x;\n  var y = location.y;\n  var wid = location.width;\n  var hei = location.height;\n  var bugHeight = 50;\n  var bugWidth = 0.1;\n  ctx.save();\n  ctx.fillStyle = GUAGE_BACKGROUND;\n\n  if (leftAlign) {\n    ctx.rect(x - bugWidth * wid, y, (1 + bugWidth) * wid, hei);\n    ctx.fillRect(x - bugWidth * wid, y, (1 + bugWidth) * wid, hei);\n  } else {\n    ctx.rect(x, y, (1 + bugWidth) * wid, hei);\n    ctx.fillRect(x, y, (1 + bugWidth) * wid, hei);\n  }\n\n  ctx.clip();\n  var numberToDraw = Math.floor(hei / scale + 0.5);\n  ctx.fillStyle = GUAGE_FOREGROUND;\n  ctx.font = fontSize + \"px Arial\";\n  ctx.textAlign = \"center\";\n  ctx.textBaseline = \"middle\";\n\n  for (var i = -numberToDraw; i < numberToDraw; i++) {\n    var relValue = Math.floor((value - smallTicks * -i) / smallTicks) * smallTicks;\n    var diff = (value - relValue) / smallTicks;\n    var newY = y + hei / 2 + scale * diff;\n\n    if (newY + fontSize > y && newY - fontSize < y + hei && (negative || relValue >= 0) && (!inverted || inverted && relValue <= 0)) {\n      if (relValue % bigTicks === 0) {\n        ctx.font = fontSize * 1.5 + \"px Arial\";\n        ctx.fillRect(x, newY - 1.5 * fontSize / 2 - 3, wid, 1);\n        ctx.fillRect(x, newY + 1.5 * fontSize / 2, wid, 1);\n        if (!inverted) ctx.fillText(relValue, x + wid / 2, newY);else ctx.fillText(-relValue, x + wid / 2, newY);\n        ctx.font = fontSize + \"px Arial\";\n      } else if (relValue % smallTicks === 0) {\n        var textWidth = 0;\n\n        if (leftAlign) {\n          textWidth = ctx.measureText(relValue).width;\n          ctx.fillRect(x, newY, wid / 2 - 15, 1);\n          if (!inverted) ctx.fillText(relValue, x + wid - textWidth / 2 - 5, newY);else ctx.fillText(-relValue, x + wid - textWidth / 2 - 5, newY);\n        } else {\n          textWidth = ctx.measureText(relValue).width;\n          ctx.fillRect(x + wid / 2 + 15, newY, wid / 2 - 15, 1);\n          if (!inverted) ctx.fillText(relValue, x + textWidth / 2 + 5, newY);else ctx.fillText(-relValue, x + textWidth / 2 + 5, newY);\n        }\n      }\n    }\n  }\n\n  diff = (value - bugValue) / smallTicks;\n  newY = y + hei / 2 + scale * diff; // console.log(bugValue);\n\n  if (newY + fontSize > y && newY - fontSize < y + hei) {\n    ctx.fillStyle = BUG;\n    ctx.beginPath();\n\n    if (leftAlign) {\n      ctx.moveTo(x - wid * bugWidth * 0, newY - bugHeight / 2);\n      ctx.lineTo(x - wid * bugWidth * 1.0, newY - bugHeight / 2);\n      ctx.lineTo(x - wid * bugWidth * 0.2, newY);\n      ctx.lineTo(x - wid * bugWidth * 1.0, newY + bugHeight / 2);\n      ctx.lineTo(x - wid * bugWidth * 0.0, newY + bugHeight / 2);\n    } else {\n      ctx.moveTo(x + wid * 0.99 + wid * bugWidth * 0, newY - bugHeight / 2);\n      ctx.lineTo(x + wid * 0.99 + wid * bugWidth * 1.0, newY - bugHeight / 2);\n      ctx.lineTo(x + wid * 0.99 + wid * bugWidth * 0.2, newY);\n      ctx.lineTo(x + wid * 0.99 + wid * bugWidth * 1.0, newY + bugHeight / 2);\n      ctx.lineTo(x + wid * 0.99 + wid * bugWidth * 0.0, newY + bugHeight / 2);\n    }\n\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  ctx.restore();\n}","map":{"version":3,"sources":["/home/alexemdesgagne/octopus-telemetry/src/src/components/PFD/elements.js"],"names":["GUAGE_FOREGROUND","GUAGE_BACKGROUND","BUG","drawTickerDigit","ctx","list","value","scrollThreshold","digitSpacing","location","fontSize","x","y","wid","width","hei","height","save","rect","clip","fillStyle","fillRect","font","textAlign","textBaseline","index","Math","floor","length","progress","valueOffset","ratio","i","I","xLoc","yLoc","offset","fillText","restore","drawTape","leftAlign","bigTicks","smallTicks","negative","scale","bugValue","inverted","bugHeight","bugWidth","numberToDraw","relValue","diff","newY","textWidth","measureText","beginPath","moveTo","lineTo","closePath","fill"],"mappings":"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","sourcesContent":["\nvar GUAGE_FOREGROUND = \"#FFFFFF\";\nvar GUAGE_BACKGROUND = \"#191921\";\nvar BUG = \"#F844F8\";\n\nexport function drawTickerDigit(ctx, list, value, scrollThreshold, digitSpacing, location, fontSize)\n{\n\tvar x = location.x;\n\tvar y = location.y;\n\tvar wid = location.width;\n\tvar hei = location.height;\n\n\tctx.save();\n\tctx.rect(x, y, wid, hei);\n\tctx.clip();\n\n\tctx.fillStyle = GUAGE_BACKGROUND;\n\tctx.fillRect(x, y, wid, hei);\n\n\tctx.font = fontSize + \"px 'Arial', Gadget, sans-serif\";\n\tctx.fillStyle = GUAGE_FOREGROUND;\n\tctx.textAlign = \"center\"\n\tctx.textBaseline = 'middle';\n\n\tvar index = Math.floor(value + 0.5);\n\tvar length = list.length;\n\tvar progress = value - Math.floor(value)\n\tvar valueOffset = Math.floor(value);\n\tif (progress > 1 - scrollThreshold)\n\t{\n\t\tvar ratio = (progress - (1 - scrollThreshold)) / scrollThreshold\n\t\tvalueOffset = Math.floor(value) + ratio\n\t}\n\n\tfor (var i = index - 2; i <= index + 2; i++)\n\t{\n\t\tvar I = i % length\n\t\tvar xLoc = x + wid / 2;\n\t\tvar yLoc = y + hei / 2;\n\t\tvar offset = - (fontSize + digitSpacing) * (i - valueOffset);\n\t\tif (I > -1)\n\t\t{\n\t\t\tctx.fillText(list[I], xLoc, yLoc + offset);\n\t\t}\n\t}\n\n\tctx.restore();\n}\n\n// Scale in pixels per small tick\n// Negative is negative allowed\nexport function drawTape(ctx, location, fontSize, leftAlign, bigTicks, smallTicks, negative, scale, value, bugValue, inverted)\n{\n\tvar x = location.x;\n\tvar y = location.y;\n\tvar wid = location.width;\n\tvar hei = location.height;\n\n\tvar bugHeight = 50;\n\tvar bugWidth = 0.1;\n\n\tctx.save();\n\tctx.fillStyle = GUAGE_BACKGROUND;\n\tif (leftAlign)\n\t{\t\n\t\tctx.rect(x - bugWidth * wid, y, (1 + bugWidth) * wid, hei);\n\t\tctx.fillRect(x - bugWidth * wid, y, (1 + bugWidth) * wid, hei);\n\t}\n\telse\n\t{\n\t\tctx.rect(x, y, (1 + bugWidth) * wid, hei);\n\t\tctx.fillRect(x, y, (1 + bugWidth) * wid, hei);\n\t}\n\tctx.clip();\n\t\n\tvar numberToDraw = Math.floor(hei / scale + 0.5);\n\n\tctx.fillStyle = GUAGE_FOREGROUND;\n\tctx.font = fontSize + \"px Arial\"\n\tctx.textAlign = \"center\";\n\tctx.textBaseline = \"middle\"; \n\tfor (var i = -numberToDraw; i < numberToDraw; i++)\n\t{\n\n\t\tvar relValue = Math.floor((value - smallTicks * - i) / smallTicks) * smallTicks\n\n\t\tvar diff = (value - relValue) / smallTicks;\n\t\tvar newY = (y + hei / 2) + scale * (diff);\n\t\tif (newY + fontSize > y && newY - fontSize < y + hei && (negative || relValue >= 0) && (!inverted || (inverted && relValue <= 0)))\n\t\t{\n\t\t\tif (relValue % bigTicks === 0)\n\t\t\t{\n\t\t\t\tctx.font = (fontSize * 1.5) + \"px Arial\"\n\t\t\t\tctx.fillRect(x, newY - 1.5 * fontSize / 2 - 3, wid, 1)\n\t\t\t\tctx.fillRect(x, newY + 1.5 * fontSize / 2, wid, 1)\n\t\t\t\tif (!inverted)\n\t\t\t\tctx.fillText(relValue, x + wid / 2, newY)\n\t\t\t\telse\n\t\t\t\tctx.fillText(-relValue, x + wid / 2, newY)\n\t\t\t\tctx.font = fontSize + \"px Arial\"\n\t\t\t}\n\t\t\telse if (relValue % smallTicks === 0)\n\t\t\t{\n\t\t\t\tvar textWidth = 0\n\t\t\t\tif (leftAlign)\n\t\t\t\t{\n\t\t\t\t\ttextWidth = ctx.measureText(relValue).width;\n\t\t\t\t\tctx.fillRect(x, newY, wid/2 - 15, 1)\n\t\t\t\t\tif (!inverted)\n\t\t\t\t\tctx.fillText(relValue, x + wid - textWidth/2 - 5, newY)\n\t\t\t\t\telse\n\t\t\t\t\tctx.fillText(-relValue, x + wid - textWidth/2 - 5, newY)\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttextWidth = ctx.measureText(relValue).width;\n\t\t\t\t\tctx.fillRect(x + wid/2 + 15, newY, wid/2 - 15, 1)\n\t\t\t\t\tif (!inverted)\n\t\t\t\t\tctx.fillText(relValue, x + textWidth/2 + 5, newY)\n\t\t\t\t\telse\n\t\t\t\t\tctx.fillText(-relValue, x + textWidth/2 + 5, newY)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdiff = (value - bugValue) / smallTicks;\n\tnewY = (y + hei / 2) + scale * (diff);\n\t// console.log(bugValue);\n\tif (newY + fontSize > y && newY - fontSize < y + hei)\n\t{\n\t\tctx.fillStyle = BUG;\n\t\tctx.beginPath();\n\t\tif (leftAlign)\n\t\t{\n\t\t\tctx.moveTo(x - wid * bugWidth * 0, newY - bugHeight / 2);\n\t\t\tctx.lineTo(x - wid * bugWidth * 1.0, newY - bugHeight / 2);\n\t\t\tctx.lineTo(x - wid * bugWidth * 0.2, newY);\n\t\t\tctx.lineTo(x - wid * bugWidth * 1.0, newY + bugHeight / 2);\n\t\t\tctx.lineTo(x - wid * bugWidth * 0.0, newY + bugHeight / 2);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tctx.moveTo(x + wid * 0.99 + wid * bugWidth * 0, newY - bugHeight / 2);\n\t\t\tctx.lineTo(x + wid * 0.99 + wid * bugWidth * 1.0, newY - bugHeight / 2);\n\t\t\tctx.lineTo(x + wid * 0.99 + wid * bugWidth * 0.2, newY);\n\t\t\tctx.lineTo(x + wid * 0.99 + wid * bugWidth * 1.0, newY + bugHeight / 2);\n\t\t\tctx.lineTo(x + wid * 0.99 + wid * bugWidth * 0.0, newY + bugHeight / 2);\n\t\t}\n\t\tctx.closePath();\n\t\tctx.fill();\n\t}\n\n\tctx.restore();\n\n}\n"]},"metadata":{},"sourceType":"module"}