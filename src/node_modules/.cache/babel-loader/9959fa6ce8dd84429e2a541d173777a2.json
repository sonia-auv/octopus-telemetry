{"ast":null,"code":"var _jsxFileName = \"/home/alexemdesgagne/octopus-telemetry/src/src/components/TestBoardModule.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Button from './common/button/Button';\nimport TextField from './common/textfield/Textfield';\nimport Checkbox from './common/Checkbox/Checkbox';\nimport FormControlLabel from './common/Form/FormControlLabel';\nimport { useROSTopicPublisher } from \"../hooks/useROSTopicPublisher\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TestBoardModule = () => {\n  _s();\n\n  const [slave, setSlave] = React.useState(\"\");\n  const [cmd, setCmd] = React.useState(\"\");\n  const [data, setData] = React.useState(\"\");\n  const [rate, setRate] = React.useState(\"\");\n  const [isSingleSend, setIsSingleSend] = React.useState(true);\n  let intervalVar;\n  const testBoardPublisher = useROSTopicPublisher(\"/interface_rs485/dataRx\", \"sonia_common/SendRS485Msg\");\n\n  const handleStart = () => {\n    let toPublish = {\n      slave: slave,\n      cmd: cmd,\n      data: data\n    };\n\n    if (!isSingleSend) {\n      console.log(\"Continuous publishing...\");\n      intervalVar = setInterval(function () {\n        testBoardPublisher(toPublish);\n      }, parseInt(rate));\n    } else {\n      testBoardPublisher(toPublish);\n    }\n  };\n\n  const handleStop = () => {\n    console.log(\"Continuous publishing stopped...\");\n    clearInterval(intervalVar);\n  };\n\n  const handleSingleCheck = () => {\n    setIsSingleSend(!isSingleSend);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%',\n      flexDirection: 'row',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Test board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic-01\",\n          label: \"Slave\",\n          name: \"slave\",\n          type: \"number\",\n          value: slave,\n          style: {\n            margin: '5px',\n            color: 'red'\n          },\n          color: \"secondary\",\n          handlerChange: event => setSlave(event.target.value),\n          handlerKeyDown: () => {},\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic-02\",\n          label: \"Cmd\",\n          name: \"cmd\",\n          value: cmd,\n          style: {\n            margin: '5px'\n          },\n          handlerChange: event => setCmd(event.target.value),\n          handlerKeyDown: () => {},\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic-03\",\n          label: \"Data\",\n          name: \"data\",\n          style: {\n            margin: '5px'\n          },\n          value: data,\n          handlerChange: event => setData(event.target.value),\n          handlerKeyDown: () => {},\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic-04\",\n          label: \"Rate\",\n          name: \"rate\",\n          value: rate,\n          type: \"number\",\n          style: {\n            margin: '5px'\n          },\n          handlerChange: event => setRate(event.target.value),\n          handlerKeyDown: () => {},\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"5px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: isSingleSend,\n            handler: handleSingleCheck,\n            name: \"checkedA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 34\n          }, this),\n          label: \"Single send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"5px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Start\",\n          style: {\n            fontSize: '20px',\n            alignSelf: 'center'\n          },\n          handler: handleStart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"5px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Stop\",\n          style: {\n            fontSize: '20px',\n            alignSelf: 'center'\n          },\n          handler: handleStop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TestBoardModule, \"N8Az9xER4g15TxzuYwkrnw6Y5BQ=\", false, function () {\n  return [useROSTopicPublisher];\n});\n\n_c = TestBoardModule;\nexport default TestBoardModule;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestBoardModule\");","map":{"version":3,"sources":["/home/alexemdesgagne/octopus-telemetry/src/src/components/TestBoardModule.tsx"],"names":["React","Button","TextField","Checkbox","FormControlLabel","useROSTopicPublisher","TestBoardModule","slave","setSlave","useState","cmd","setCmd","data","setData","rate","setRate","isSingleSend","setIsSingleSend","intervalVar","testBoardPublisher","handleStart","toPublish","console","log","setInterval","parseInt","handleStop","clearInterval","handleSingleCheck","width","height","flexDirection","textAlign","margin","color","event","target","value","fontSize","alignSelf"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport Button from './common/button/Button';\r\nimport TextField from './common/textfield/Textfield';\r\nimport Checkbox from './common/Checkbox/Checkbox'\r\nimport FormControlLabel from './common/Form/FormControlLabel';\r\n\r\nimport { useROSTopicPublisher } from \"../hooks/useROSTopicPublisher\";\r\n\r\nconst TestBoardModule = () => {\r\n\r\n    const [slave, setSlave] = React.useState(\"\")\r\n    const [cmd, setCmd] = React.useState(\"\")\r\n    const [data, setData] = React.useState(\"\")\r\n    const [rate, setRate] = React.useState(\"\")\r\n    const [isSingleSend, setIsSingleSend] = React.useState(true)\r\n    let intervalVar: any\r\n    const testBoardPublisher = useROSTopicPublisher<any>(\"/interface_rs485/dataRx\", \"sonia_common/SendRS485Msg\")\r\n\r\n    const handleStart = () => {\r\n\r\n        let toPublish = {\r\n            slave: slave,\r\n            cmd: cmd,\r\n            data: data\r\n        }\r\n        if (!isSingleSend) {\r\n            console.log(\"Continuous publishing...\")\r\n            intervalVar = setInterval(function () {\r\n                testBoardPublisher(toPublish)\r\n            }, parseInt(rate))\r\n\r\n        }\r\n        else {\r\n            testBoardPublisher(toPublish)\r\n        }\r\n    }\r\n    const handleStop = () => {\r\n        console.log(\"Continuous publishing stopped...\")\r\n        clearInterval(intervalVar)\r\n    }\r\n    const handleSingleCheck = () => {\r\n        setIsSingleSend(!isSingleSend)\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '100%', height: '100%', flexDirection: 'row', textAlign: 'center' }}>\r\n            <h1>Test board</h1>\r\n            <form>\r\n                <div>\r\n                    <TextField id=\"outlined-basic-01\"\r\n                        label=\"Slave\"\r\n                        name=\"slave\"\r\n                        type=\"number\"\r\n                        value={slave}\r\n                        style={{ margin: '5px', color: 'red' }}\r\n                        color=\"secondary\"\r\n                        handlerChange={(event) => setSlave(event.target.value)}\r\n                        handlerKeyDown={() => { }}\r\n                        autoFocus={true}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <TextField id=\"outlined-basic-02\"\r\n                        label=\"Cmd\"\r\n                        name=\"cmd\"\r\n                        value={cmd}\r\n                        style={{ margin: '5px' }}\r\n                        handlerChange={(event) => setCmd(event.target.value)}\r\n                        handlerKeyDown={() => { }}\r\n                        autoFocus={true}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <TextField id=\"outlined-basic-03\"\r\n                        label=\"Data\"\r\n                        name=\"data\"\r\n                        style={{ margin: '5px' }}\r\n                        value={data}\r\n                        handlerChange={(event) => setData(event.target.value)}\r\n                        handlerKeyDown={() => { }}\r\n                        autoFocus={true}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <TextField id=\"outlined-basic-04\"\r\n\r\n                        label=\"Rate\"\r\n                        name=\"rate\"\r\n                        value={rate}\r\n                        type=\"number\"\r\n                        style={{ margin: '5px' }}\r\n                        handlerChange={(event) => setRate(event.target.value)}\r\n                        handlerKeyDown={() => { }}\r\n                        autoFocus={true}\r\n                    />\r\n                </div>\r\n                <div style={{ margin: \"5px\" }}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={isSingleSend} handler={handleSingleCheck} name=\"checkedA\" />}\r\n                        label=\"Single send\"\r\n                    />\r\n                </div>\r\n                <div style={{ margin: \"5px\" }}>\r\n                    <Button label=\"Start\" style={{ fontSize: '20px', alignSelf: 'center' }}\r\n                        handler={handleStart} />\r\n                </div>\r\n                <div style={{ margin: \"5px\" }}>\r\n                    <Button label=\"Stop\" style={{ fontSize: '20px', alignSelf: 'center' }}\r\n                        handler={handleStop} />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default TestBoardModule"]},"metadata":{},"sourceType":"module"}