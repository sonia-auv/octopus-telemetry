{"ast":null,"code":"var _jsxFileName = \"/home/alexemdesgagne/octopus-telemetry/src/src/components/MenuModule.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Button from './common/button/Button';\nimport Menu from './common/Menu/Menu';\nimport MenuItem from './common/Menu/MenuItem';\nimport { MMenuIcon as MenuIcon } from './common/Icons/Icon';\nimport { GeneralContext } from \"../context/generalContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MenuModule = props => {\n  _s();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleClearLayout = () => {\n    localStorage.clear();\n    window.location.reload();\n  };\n\n  const saveTheme = bool => {\n    localStorage.setItem(\"isDarkMode\", bool.toString());\n  };\n\n  return /*#__PURE__*/_jsxDEV(GeneralContext.Consumer, {\n    children: context => context && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        label: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 36\n        }, this),\n        handler: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        id: \"simple-menu\",\n        anchorEl: anchorEl,\n        keepMounted: true,\n        open: Boolean(anchorEl),\n        handler: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          handler: handleClose,\n          children: \"File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          handler: handleClose,\n          children: \"Plugins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          handler: handleClose,\n          children: \"Running\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          handler: handleClearLayout,\n          children: \"Clear layout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          handler: () => {\n            context.setIsDarkMode(!context.isDarkMode);\n            saveTheme(!context.isDarkMode);\n          },\n          children: context.isDarkMode ? 'Activate light mode' : 'Activate dark mode'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          handler: handleClose,\n          children: \"Help\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MenuModule, \"+aMDa7FPcESUyQDF1vq0RSMn4/k=\");\n\n_c = MenuModule;\nexport default MenuModule;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuModule\");","map":{"version":3,"sources":["/home/alexemdesgagne/octopus-telemetry/src/src/components/MenuModule.tsx"],"names":["React","Button","Menu","MenuItem","MMenuIcon","MenuIcon","GeneralContext","MenuModule","props","anchorEl","setAnchorEl","useState","handleClick","event","currentTarget","handleClose","handleClearLayout","localStorage","clear","window","location","reload","saveTheme","bool","setItem","toString","context","Boolean","setIsDarkMode","isDarkMode"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,SAAS,IAAIC,QAAtB,QAAsC,qBAAtC;AACA,SAASC,cAAT,QAA+B,2BAA/B;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAgB;AAAA;;AAC/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,KAAK,CAACW,QAAN,CAAmC,IAAnC,CAAhC;;AAEA,QAAMC,WAAW,GAAIC,KAAD,IAAgD;AAChEH,IAAAA,WAAW,CAACG,KAAK,CAACC,aAAP,CAAX;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACtBL,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,QAAMM,iBAAiB,GAAG,MAAM;AAC5BC,IAAAA,YAAY,CAACC,KAAb;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,GAHD;;AAIA,QAAMC,SAAS,GAAIC,IAAD,IAAmB;AACjCN,IAAAA,YAAY,CAACO,OAAb,CAAqB,YAArB,EAAmCD,IAAI,CAACE,QAAL,EAAnC;AACH,GAFD;;AAGA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AAAA,cACKC,OAAO,IAAIA,OAAO,iBACf;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,KAAK,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBAAf;AAA6B,QAAA,OAAO,EAAEd;AAAtC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AACI,QAAA,EAAE,EAAC,aADP;AAEI,QAAA,QAAQ,EAAEH,QAFd;AAGI,QAAA,WAAW,MAHf;AAII,QAAA,IAAI,EAAEkB,OAAO,CAAClB,QAAD,CAJjB;AAKI,QAAA,OAAO,EAAEM,WALb;AAAA,gCAOI,QAAC,QAAD;AAAU,UAAA,OAAO,EAAEA,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI,QAAC,QAAD;AAAU,UAAA,OAAO,EAAEA,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI,QAAC,QAAD;AAAU,UAAA,OAAO,EAAEA,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,eAUI,QAAC,QAAD;AAAU,UAAA,OAAO,EAAEC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAWI,QAAC,QAAD;AAAU,UAAA,OAAO,EAAE,MAAM;AACrBU,YAAAA,OAAO,CAACE,aAAR,CAAsB,CAACF,OAAO,CAACG,UAA/B;AACAP,YAAAA,SAAS,CAAC,CAACI,OAAO,CAACG,UAAV,CAAT;AACH,WAHD;AAAA,oBAIKH,OAAO,CAACG,UAAR,GAAqB,qBAArB,GAA6C;AAJlD;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAiBI,QAAC,QAAD;AAAU,UAAA,OAAO,EAAEd,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CA/CD;;GAAMR,U;;KAAAA,U;AAiDN,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\nimport Button from './common/button/Button';\r\nimport Menu from './common/Menu/Menu';\r\nimport MenuItem from './common/Menu/MenuItem';\r\nimport { MMenuIcon as MenuIcon } from './common/Icons/Icon';\r\nimport { GeneralContext } from \"../context/generalContext\";\r\n\r\nconst MenuModule = (props: any) => {\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleClearLayout = () => {\r\n        localStorage.clear()\r\n        window.location.reload()\r\n    }\r\n    const saveTheme = (bool: boolean) => {\r\n        localStorage.setItem(\"isDarkMode\", bool.toString())\r\n    }\r\n    return (\r\n        <GeneralContext.Consumer>\r\n            {context => context && (\r\n                <div>\r\n                    <Button label={<MenuIcon />} handler={handleClick} />\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        handler={handleClose}\r\n                    >\r\n                        <MenuItem handler={handleClose}>File</MenuItem>\r\n                        <MenuItem handler={handleClose}>Plugins</MenuItem>\r\n                        <MenuItem handler={handleClose}>Running</MenuItem>\r\n                        <MenuItem handler={handleClearLayout}>Clear layout</MenuItem>\r\n                        <MenuItem handler={() => {\r\n                            context.setIsDarkMode(!context.isDarkMode);\r\n                            saveTheme(!context.isDarkMode)\r\n                        }}>\r\n                            {context.isDarkMode ? 'Activate light mode' : 'Activate dark mode'}\r\n                        </MenuItem>\r\n                        <MenuItem handler={handleClose}>Help</MenuItem>\r\n\r\n                    </Menu>\r\n                </div>\r\n            )}\r\n        </GeneralContext.Consumer>\r\n    );\r\n}\r\n\r\nexport default MenuModule\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}