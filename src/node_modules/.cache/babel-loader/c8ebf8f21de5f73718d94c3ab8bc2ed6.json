{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.resizeHandleType = exports.resizeHandlesType = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // Defines which resize handles should be rendered (default: 'se')\n// Allows for any combination of:\n// 's' - South handle (bottom-center)\n// 'w' - West handle (left-center)\n// 'e' - East handle (right-center)\n// 'n' - North handle (top-center)\n// 'sw' - Southwest handle (bottom-left)\n// 'nw' - Northwest handle (top-left)\n// 'se' - Southeast handle (bottom-right)\n// 'ne' - Northeast handle (top-right)\n\n\nvar resizeHandlesType\n/*: ReactPropsChainableTypeChecker*/\n= _propTypes.default.arrayOf(_propTypes.default.oneOf([\"s\", \"w\", \"e\", \"n\", \"sw\", \"nw\", \"se\", \"ne\"])); // Custom component for resize handles\n\n\nexports.resizeHandlesType = resizeHandlesType;\n\nvar resizeHandleType\n/*: ReactPropsChainableTypeChecker*/\n= _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]);\n/*:: export type Props = {|\n  className: string,\n  style: Object,\n  width: number,\n  autoSize: boolean,\n  cols: number,\n  draggableCancel: string,\n  draggableHandle: string,\n  verticalCompact: boolean,\n  compactType: CompactType,\n  layout: Layout,\n  margin: [number, number],\n  containerPadding: ?[number, number],\n  rowHeight: number,\n  maxRows: number,\n  isBounded: boolean,\n  isDraggable: boolean,\n  isResizable: boolean,\n  isDroppable: boolean,\n  preventCollision: boolean,\n  useCSSTransforms: boolean,\n  transformScale: number,\n  droppingItem: $Shape<LayoutItem>,\n  resizeHandles: ResizeHandles,\n  resizeHandle?: ResizeHandle,\n\n  // Callbacks\n  onLayoutChange: Layout => void,\n  onDrag: EventCallback,\n  onDragStart: EventCallback,\n  onDragStop: EventCallback,\n  onResize: EventCallback,\n  onResizeStart: EventCallback,\n  onResizeStop: EventCallback,\n  onDrop: (layout: Layout, item: ?LayoutItem, e: Event) => void,\n  children: ReactChildrenArray<ReactElement<any>>,\n  innerRef?: Ref<\"div\">\n|};*/\n\n/*:: export type DefaultProps = $Diff<\n  Props,\n  {\n    children: ReactChildrenArray<ReactElement<any>>,\n    width: number\n  }\n>;*/\n\n\nexports.resizeHandleType = resizeHandleType;\nvar _default = {\n  //\n  // Basic props\n  //\n  className: _propTypes.default.string,\n  style: _propTypes.default.object,\n  // This can be set explicitly. If it is not set, it will automatically\n  // be set to the container width. Note that resizes will *not* cause this to adjust.\n  // If you need that behavior, use WidthProvider.\n  width: _propTypes.default.number,\n  // If true, the container height swells and contracts to fit contents\n  autoSize: _propTypes.default.bool,\n  // # of cols.\n  cols: _propTypes.default.number,\n  // A selector that will not be draggable.\n  draggableCancel: _propTypes.default.string,\n  // A selector for the draggable handler\n  draggableHandle: _propTypes.default.string,\n  // Deprecated\n  verticalCompact: function verticalCompact(props\n  /*: Props*/\n  ) {\n    if (props.verticalCompact === false && process.env.NODE_ENV !== \"production\") {\n      console.warn( // eslint-disable-line no-console\n      \"`verticalCompact` on <ReactGridLayout> is deprecated and will be removed soon. \" + 'Use `compactType`: \"horizontal\" | \"vertical\" | null.');\n    }\n  },\n  // Choose vertical or hotizontal compaction\n  compactType: _propTypes.default.oneOf([\"vertical\", \"horizontal\"])\n  /*: ReactPropsChainableTypeChecker*/\n  ,\n  // layout is an array of object with the format:\n  // {x: Number, y: Number, w: Number, h: Number, i: String}\n  layout: function layout(props\n  /*: Props*/\n  ) {\n    var layout = props.layout; // I hope you're setting the data-grid property on the grid items\n\n    if (layout === undefined) return;\n\n    require(\"./utils\").validateLayout(layout, \"layout\");\n  },\n  //\n  // Grid Dimensions\n  //\n  // Margin between items [x, y] in px\n  margin: _propTypes.default.arrayOf(_propTypes.default.number)\n  /*: ReactPropsChainableTypeChecker*/\n  ,\n  // Padding inside the container [x, y] in px\n  containerPadding: _propTypes.default.arrayOf(_propTypes.default.number)\n  /*: ReactPropsChainableTypeChecker*/\n  ,\n  // Rows have a static height, but you can change this based on breakpoints if you like\n  rowHeight: _propTypes.default.number,\n  // Default Infinity, but you can specify a max here if you like.\n  // Note that this isn't fully fleshed out and won't error if you specify a layout that\n  // extends beyond the row capacity. It will, however, not allow users to drag/resize\n  // an item past the barrier. They can push items beyond the barrier, though.\n  // Intentionally not documented for this reason.\n  maxRows: _propTypes.default.number,\n  //\n  // Flags\n  //\n  isBounded: _propTypes.default.bool,\n  isDraggable: _propTypes.default.bool,\n  isResizable: _propTypes.default.bool,\n  // If true, grid items won't change position when being dragged over.\n  preventCollision: _propTypes.default.bool,\n  // Use CSS transforms instead of top/left\n  useCSSTransforms: _propTypes.default.bool,\n  // parent layout transform scale\n  transformScale: _propTypes.default.number,\n  // If true, an external element can trigger onDrop callback with a specific grid position as a parameter\n  isDroppable: _propTypes.default.bool,\n  // Resize handle options\n  resizeHandles: resizeHandlesType,\n  resizeHandle: resizeHandleType,\n  //\n  // Callbacks\n  //\n  // Callback so you can save the layout. Calls after each drag & resize stops.\n  onLayoutChange: _propTypes.default.func,\n  // Calls when drag starts. Callback is of the signature (layout, oldItem, newItem, placeholder, e, ?node).\n  // All callbacks below have the same signature. 'start' and 'stop' callbacks omit the 'placeholder'.\n  onDragStart: _propTypes.default.func,\n  // Calls on each drag movement.\n  onDrag: _propTypes.default.func,\n  // Calls when drag is complete.\n  onDragStop: _propTypes.default.func,\n  //Calls when resize starts.\n  onResizeStart: _propTypes.default.func,\n  // Calls when resize movement happens.\n  onResize: _propTypes.default.func,\n  // Calls when resize is complete.\n  onResizeStop: _propTypes.default.func,\n  // Calls when some element is dropped.\n  onDrop: _propTypes.default.func,\n  //\n  // Other validations\n  //\n  droppingItem: _propTypes.default.shape({\n    i: _propTypes.default.string.isRequired,\n    w: _propTypes.default.number.isRequired,\n    h: _propTypes.default.number.isRequired\n  })\n  /*: ReactPropsChainableTypeChecker*/\n  ,\n  // Children must not have duplicate keys.\n  children: function children(props\n  /*: Props*/\n  , propName\n  /*: string*/\n  ) {\n    var children = props[propName]; // Check children keys for duplicates. Throw if found.\n\n    var keys = {};\n\n    _react.default.Children.forEach(children, function (child) {\n      if (keys[child.key]) {\n        throw new Error('Duplicate child key \"' + child.key + '\" found! This will cause problems in ReactGridLayout.');\n      }\n\n      keys[child.key] = true;\n    });\n  },\n  // Optional ref for getting a reference for the wrapping div.\n  innerRef: _propTypes.default.any\n};\nexports.default = _default;","map":{"version":3,"sources":["/home/alexemdesgagne/octopus-telemetry/src/node_modules/react-grid-layout/build/ReactGridLayoutPropTypes.js"],"names":["Object","defineProperty","exports","value","default","resizeHandleType","resizeHandlesType","_propTypes","_interopRequireDefault","require","_react","obj","__esModule","arrayOf","oneOf","oneOfType","node","func","_default","className","string","style","object","width","number","autoSize","bool","cols","draggableCancel","draggableHandle","verticalCompact","props","process","env","NODE_ENV","console","warn","compactType","layout","undefined","validateLayout","margin","containerPadding","rowHeight","maxRows","isBounded","isDraggable","isResizable","preventCollision","useCSSTransforms","transformScale","isDroppable","resizeHandles","resizeHandle","onLayoutChange","onDragStart","onDrag","onDragStop","onResizeStart","onResize","onResizeStop","onDrop","droppingItem","shape","i","isRequired","w","h","children","propName","keys","Children","forEach","child","key","Error","innerRef","any"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.resizeHandleType = exports.resizeHandlesType = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Defines which resize handles should be rendered (default: 'se')\n// Allows for any combination of:\n// 's' - South handle (bottom-center)\n// 'w' - West handle (left-center)\n// 'e' - East handle (right-center)\n// 'n' - North handle (top-center)\n// 'sw' - Southwest handle (bottom-left)\n// 'nw' - Northwest handle (top-left)\n// 'se' - Southeast handle (bottom-right)\n// 'ne' - Northeast handle (top-right)\nvar resizeHandlesType\n/*: ReactPropsChainableTypeChecker*/\n= _propTypes.default.arrayOf(_propTypes.default.oneOf([\"s\", \"w\", \"e\", \"n\", \"sw\", \"nw\", \"se\", \"ne\"])); // Custom component for resize handles\n\n\nexports.resizeHandlesType = resizeHandlesType;\n\nvar resizeHandleType\n/*: ReactPropsChainableTypeChecker*/\n= _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]);\n/*:: export type Props = {|\n  className: string,\n  style: Object,\n  width: number,\n  autoSize: boolean,\n  cols: number,\n  draggableCancel: string,\n  draggableHandle: string,\n  verticalCompact: boolean,\n  compactType: CompactType,\n  layout: Layout,\n  margin: [number, number],\n  containerPadding: ?[number, number],\n  rowHeight: number,\n  maxRows: number,\n  isBounded: boolean,\n  isDraggable: boolean,\n  isResizable: boolean,\n  isDroppable: boolean,\n  preventCollision: boolean,\n  useCSSTransforms: boolean,\n  transformScale: number,\n  droppingItem: $Shape<LayoutItem>,\n  resizeHandles: ResizeHandles,\n  resizeHandle?: ResizeHandle,\n\n  // Callbacks\n  onLayoutChange: Layout => void,\n  onDrag: EventCallback,\n  onDragStart: EventCallback,\n  onDragStop: EventCallback,\n  onResize: EventCallback,\n  onResizeStart: EventCallback,\n  onResizeStop: EventCallback,\n  onDrop: (layout: Layout, item: ?LayoutItem, e: Event) => void,\n  children: ReactChildrenArray<ReactElement<any>>,\n  innerRef?: Ref<\"div\">\n|};*/\n\n/*:: export type DefaultProps = $Diff<\n  Props,\n  {\n    children: ReactChildrenArray<ReactElement<any>>,\n    width: number\n  }\n>;*/\n\n\nexports.resizeHandleType = resizeHandleType;\nvar _default = {\n  //\n  // Basic props\n  //\n  className: _propTypes.default.string,\n  style: _propTypes.default.object,\n  // This can be set explicitly. If it is not set, it will automatically\n  // be set to the container width. Note that resizes will *not* cause this to adjust.\n  // If you need that behavior, use WidthProvider.\n  width: _propTypes.default.number,\n  // If true, the container height swells and contracts to fit contents\n  autoSize: _propTypes.default.bool,\n  // # of cols.\n  cols: _propTypes.default.number,\n  // A selector that will not be draggable.\n  draggableCancel: _propTypes.default.string,\n  // A selector for the draggable handler\n  draggableHandle: _propTypes.default.string,\n  // Deprecated\n  verticalCompact: function verticalCompact(props\n  /*: Props*/\n  ) {\n    if (props.verticalCompact === false && process.env.NODE_ENV !== \"production\") {\n      console.warn( // eslint-disable-line no-console\n      \"`verticalCompact` on <ReactGridLayout> is deprecated and will be removed soon. \" + 'Use `compactType`: \"horizontal\" | \"vertical\" | null.');\n    }\n  },\n  // Choose vertical or hotizontal compaction\n  compactType: (_propTypes.default.oneOf([\"vertical\", \"horizontal\"])\n  /*: ReactPropsChainableTypeChecker*/\n  ),\n  // layout is an array of object with the format:\n  // {x: Number, y: Number, w: Number, h: Number, i: String}\n  layout: function layout(props\n  /*: Props*/\n  ) {\n    var layout = props.layout; // I hope you're setting the data-grid property on the grid items\n\n    if (layout === undefined) return;\n\n    require(\"./utils\").validateLayout(layout, \"layout\");\n  },\n  //\n  // Grid Dimensions\n  //\n  // Margin between items [x, y] in px\n  margin: (_propTypes.default.arrayOf(_propTypes.default.number)\n  /*: ReactPropsChainableTypeChecker*/\n  ),\n  // Padding inside the container [x, y] in px\n  containerPadding: (_propTypes.default.arrayOf(_propTypes.default.number)\n  /*: ReactPropsChainableTypeChecker*/\n  ),\n  // Rows have a static height, but you can change this based on breakpoints if you like\n  rowHeight: _propTypes.default.number,\n  // Default Infinity, but you can specify a max here if you like.\n  // Note that this isn't fully fleshed out and won't error if you specify a layout that\n  // extends beyond the row capacity. It will, however, not allow users to drag/resize\n  // an item past the barrier. They can push items beyond the barrier, though.\n  // Intentionally not documented for this reason.\n  maxRows: _propTypes.default.number,\n  //\n  // Flags\n  //\n  isBounded: _propTypes.default.bool,\n  isDraggable: _propTypes.default.bool,\n  isResizable: _propTypes.default.bool,\n  // If true, grid items won't change position when being dragged over.\n  preventCollision: _propTypes.default.bool,\n  // Use CSS transforms instead of top/left\n  useCSSTransforms: _propTypes.default.bool,\n  // parent layout transform scale\n  transformScale: _propTypes.default.number,\n  // If true, an external element can trigger onDrop callback with a specific grid position as a parameter\n  isDroppable: _propTypes.default.bool,\n  // Resize handle options\n  resizeHandles: resizeHandlesType,\n  resizeHandle: resizeHandleType,\n  //\n  // Callbacks\n  //\n  // Callback so you can save the layout. Calls after each drag & resize stops.\n  onLayoutChange: _propTypes.default.func,\n  // Calls when drag starts. Callback is of the signature (layout, oldItem, newItem, placeholder, e, ?node).\n  // All callbacks below have the same signature. 'start' and 'stop' callbacks omit the 'placeholder'.\n  onDragStart: _propTypes.default.func,\n  // Calls on each drag movement.\n  onDrag: _propTypes.default.func,\n  // Calls when drag is complete.\n  onDragStop: _propTypes.default.func,\n  //Calls when resize starts.\n  onResizeStart: _propTypes.default.func,\n  // Calls when resize movement happens.\n  onResize: _propTypes.default.func,\n  // Calls when resize is complete.\n  onResizeStop: _propTypes.default.func,\n  // Calls when some element is dropped.\n  onDrop: _propTypes.default.func,\n  //\n  // Other validations\n  //\n  droppingItem: (_propTypes.default.shape({\n    i: _propTypes.default.string.isRequired,\n    w: _propTypes.default.number.isRequired,\n    h: _propTypes.default.number.isRequired\n  })\n  /*: ReactPropsChainableTypeChecker*/\n  ),\n  // Children must not have duplicate keys.\n  children: function children(props\n  /*: Props*/\n  , propName\n  /*: string*/\n  ) {\n    var children = props[propName]; // Check children keys for duplicates. Throw if found.\n\n    var keys = {};\n\n    _react.default.Children.forEach(children, function (child) {\n      if (keys[child.key]) {\n        throw new Error('Duplicate child key \"' + child.key + '\" found! This will cause problems in ReactGridLayout.');\n      }\n\n      keys[child.key] = true;\n    });\n  },\n  // Optional ref for getting a reference for the wrapping div.\n  innerRef: _propTypes.default.any\n};\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}