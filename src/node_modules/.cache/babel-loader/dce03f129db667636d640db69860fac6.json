{"ast":null,"code":"var _jsxFileName = \"/home/alexemdesgagne/octopus-telemetry/src/src/components/common/button/Button.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { Button as MUIButton } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_BUTTON_STYLE = {\n  backgroundColor: 'white',\n  border: '1px solid blue'\n};\nconst GenericButton = withStyles({\n  contained: {\n    backgroundColor: 'lightgrey',\n    border: '2px solid black'\n  }\n})(MUIButton);\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1),\n    \"& .MuiButton-iconSizeMedium > *:first-child\": {\n      fontSize: \"20px\"\n    },\n    \"& .MuiButton-startIcon\": {\n      marginLeft: \"-2px\",\n      marginRight: \"0px\"\n    }\n  }\n}));\n\nconst Button = props => {\n  _s();\n\n  const classes = useStyles();\n\n  if (props.isIcon) {\n    return /*#__PURE__*/_jsxDEV(MUIButton, {\n      variant: \"contained\",\n      className: classes.button,\n      style: { ...DEFAULT_BUTTON_STYLE,\n        ...props.style\n      },\n      \"data-testid\": \"test-button\",\n      onClick: props.handler,\n      disabled: props.disabled,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(GenericButton, {\n      variant: \"contained\",\n      className: props.className,\n      style: { ...DEFAULT_BUTTON_STYLE,\n        ...props.style\n      },\n      \"data-testid\": \"test-button\",\n      onClick: props.handler,\n      disabled: props.disabled,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Button, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Button;\nButton.defaultProps = {\n  label: 'Submit',\n  style: {},\n  disabled: false,\n  isIcon: false\n};\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/home/alexemdesgagne/octopus-telemetry/src/src/components/common/button/Button.tsx"],"names":["React","withStyles","makeStyles","Button","MUIButton","DEFAULT_BUTTON_STYLE","backgroundColor","border","GenericButton","contained","useStyles","theme","button","margin","spacing","fontSize","marginLeft","marginRight","props","classes","isIcon","style","handler","disabled","label","className","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AACA,SAASC,MAAM,IAAIC,SAAnB,QAAoC,mBAApC;;AAWA,MAAMC,oBAAoB,GAAG;AAC3BC,EAAAA,eAAe,EAAE,OADU;AAE3BC,EAAAA,MAAM,EAAE;AAFmB,CAA7B;AAKA,MAAMC,aAAa,GAAGP,UAAU,CAAC;AAC/BQ,EAAAA,SAAS,EAAE;AACTH,IAAAA,eAAe,EAAE,WADR;AAETC,IAAAA,MAAM,EAAE;AAFC;AADoB,CAAD,CAAV,CAKnBH,SALmB,CAAtB;AAOA,MAAMM,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADF;AAEN,mDAA+C;AAC3CC,MAAAA,QAAQ,EAAE;AADiC,KAFzC;AAKN,8BAA0B;AACtBC,MAAAA,UAAU,EAAE,MADU;AAEtBC,MAAAA,WAAW,EAAE;AAFS;AALpB;AAD+B,CAAZ,CAAD,CAA5B;;AAaA,MAAMd,MAAsC,GAAIe,KAAD,IAAW;AAAA;;AAExD,QAAMC,OAAO,GAAGT,SAAS,EAAzB;;AAEA,MAAIQ,KAAK,CAACE,MAAV,EAAkB;AAEhB,wBACE,QAAC,SAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,SAAS,EAAED,OAAO,CAACP,MAFrB;AAGE,MAAA,KAAK,EAAE,EACL,GAAGP,oBADE;AAEL,WAAGa,KAAK,CAACG;AAFJ,OAHT;AAOE,qBAAY,aAPd;AAQE,MAAA,OAAO,EAAEH,KAAK,CAACI,OARjB;AASE,MAAA,QAAQ,EAAEJ,KAAK,CAACK,QATlB;AAAA,gBAWGL,KAAK,CAACM;AAXT;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD,GAlBD,MAoBA;AAEE,wBACE,QAAC,aAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,SAAS,EAAEN,KAAK,CAACO,SAFnB;AAGE,MAAA,KAAK,EAAE,EACL,GAAGpB,oBADE;AAEL,WAAGa,KAAK,CAACG;AAFJ,OAHT;AAOE,qBAAY,aAPd;AAQE,MAAA,OAAO,EAAEH,KAAK,CAACI,OARjB;AASE,MAAA,QAAQ,EAAEJ,KAAK,CAACK,QATlB;AAAA,gBAWGL,KAAK,CAACM;AAXT;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;AACF,CA3CD;;GAAMrB,M;UAEYO,S;;;KAFZP,M;AA6CNA,MAAM,CAACuB,YAAP,GAAsB;AACpBF,EAAAA,KAAK,EAAE,QADa;AAEpBH,EAAAA,KAAK,EAAE,EAFa;AAGpBE,EAAAA,QAAQ,EAAE,KAHU;AAIpBH,EAAAA,MAAM,EAAE;AAJY,CAAtB;AAOA,eAAejB,MAAf","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { Button as MUIButton } from '@material-ui/core';\n\ntype ButtonProps = {\n  label?: string | React.ReactNode;\n  handler: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  style?: React.CSSProperties;\n  disabled?: boolean;\n  className?: string\n  isIcon?: boolean\n};\n\nconst DEFAULT_BUTTON_STYLE = {\n  backgroundColor: 'white',\n  border: '1px solid blue',\n};\n\nconst GenericButton = withStyles({\n  contained: {\n    backgroundColor: 'lightgrey',\n    border: '2px solid black',\n  },\n})(MUIButton);\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n    \"& .MuiButton-iconSizeMedium > *:first-child\": {\n        fontSize: \"20px\"\n    },\n    \"& .MuiButton-startIcon\": {\n        marginLeft: \"-2px\",\n        marginRight: \"0px\"\n    }\n},\n}));\n\nconst Button: FunctionComponent<ButtonProps> = (props) => {\n\n  const classes = useStyles();\n\n  if (props.isIcon) {\n\n    return (\n      <MUIButton\n        variant=\"contained\"\n        className={classes.button}\n        style={{\n          ...DEFAULT_BUTTON_STYLE,\n          ...props.style,\n        }}\n        data-testid=\"test-button\"\n        onClick={props.handler}\n        disabled={props.disabled}\n      >\n        {props.label}\n      </MUIButton>\n    )\n\n  } \n  else \n  {\n\n    return (\n      <GenericButton\n        variant=\"contained\"\n        className={props.className}\n        style={{\n          ...DEFAULT_BUTTON_STYLE,\n          ...props.style,\n        }}\n        data-testid=\"test-button\"\n        onClick={props.handler}\n        disabled={props.disabled}\n      >\n        {props.label}\n      </GenericButton>\n    )\n    \n  }\n};\n\nButton.defaultProps = {\n  label: 'Submit',\n  style: {},\n  disabled: false,\n  isIcon: false\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}